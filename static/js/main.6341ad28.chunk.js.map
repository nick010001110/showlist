{"version":3,"sources":["../../../showlist/src/components/presentational/Navbar.js","../../../showlist/src/components/presentational/TableT.js","../../../showlist/src/components/presentational/Select.js","../../../showlist/src/components/containers/Trending.jsx","../../../showlist/src/reducers/trending.js","../../../showlist/src/components/containers/TrendingShowsContainer.jsx","../../../showlist/src/components/presentational/TableP.js","../../../showlist/src/components/containers/Popular.jsx","../../../showlist/src/reducers/popular.js","../../../showlist/src/components/containers/PopularShowsContainer.jsx","../../../showlist/src/App.js","../../../showlist/src/serviceWorker.js","../../../showlist/src/index.js"],"names":["withRouter","react_default","a","createElement","className","href","react_router_dom","to","useStyles","makeStyles","theme","root","width","marginTop","spacing","overflowX","table","minWidth","SimpleTable","props","classes","rows","shows","number","page","limit","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","show","ids","tvdb","length","key","trakt","component","scope","title","year","target","rel","display","flexWrap","formControl","margin","maxWidth","chips","chip","noLabel","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","getStyles","name","personName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MultipleSelect","names","items","useTheme","_React$useState","React","useState","_React$useState2","Object","slicedToArray","setPersonName","FormControl","InputLabel","htmlFor","Select","multiple","value","onChange","event","input","Input","id","renderValue","selected","Chip","label","MenuItem","Trending","onPageChanged","pageNumber","_pageChange","asyncToGenerator","regenerator_default","mark","_callee","response","imgs","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_response","wrap","_context","prev","next","axios","url","concat","pageLimit","currentGenres","currentLanguages","query","years","currentCountries","method","headers","Content-Type","trakt-api-version","trakt-api-key","sent","data","undefined","Symbol","iterator","done","tvposter","t0","t1","return","finish","setShows","stop","apply","this","arguments","_this","setCurrentPage","_x","pageChange","error","onLangComboboxChange","res","languages","myres","_pageChange2","_callee2","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_response2","_context2","join","setPageCount","forEach","element","push","find","lang","code","_x2","setCurrentLanguages","onGenreComboboxChange","genres","_pageChange3","_callee3","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_response3","_context3","slug","_x3","setCurrentGenres","onCountriesComboboxChange","countries","_pageChange4","_callee4","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","_response4","_context4","coun","_x4","setСurrentCountries","handleChangeQuery","e","_pageChange5","_callee5","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_iterator5","_step5","_response5","_context5","setQuery","_x5","handleChangeYears","_pageChange6","_callee6","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_iterator6","_step6","_response6","_context6","setYears","_x6","currentPage","setGenres","setLanguages","setCountries","_this$props","type","build_default","totalPages","pageCount","changeCurrentPage","Component","initState","trendingReducer","state","action","objectSpread","connect","trending","dispatch","setShowsAC_T","setGenresAC_T","setLanguagesAC_T","setPageCountAC_T","setQueryAC_T","setYearsAC_T","setCountriesAC_T","setСurrentCountriesAC_T","Popular","TableP_SimpleTable","popularReducer","popular","setShowsAC_P","setGenresAC_P","setLanguagesAC_P","setPageCountAC_P","setQueryAC_P","setYearsAC_P","setCountriesAC_P","setСurrentCountriesAC_P","App","presentational_Navbar","react_router","exact","path","TrendingShowsContainer","PopularShowsContainer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","store","createStore","combineReducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"8JAoBgBA,kBAjBhB,WAEI,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaC,KAAK,aAA/B,aACIJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAEVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,aAAT,aACJN,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,YAAT,+JCFlBC,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,MAAO,OACPC,UAAWH,EAAMI,QAAQ,GACzBC,UAAW,QAEbC,MAAO,CACLC,SAAU,QAIC,SAASC,EAAYC,GAGpC,IAAMC,EAAUZ,IAEZa,EAAMF,EAAMG,MACZC,GAAUJ,EAAMK,KAAK,GAAGL,EAAMM,MAKhC,OACExB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAOtB,UAAWgB,EAAQT,MACxBV,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAOvB,UAAWgB,EAAQJ,OACxBf,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACE3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACE5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,eACA7B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,cACA7B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,MAAM,SAAjB,QACA9B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACA9B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,MAAM,SAAjB,2BAGA9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACGX,EAAKY,IAAI,SAAAC,GAAG,OACXX,IAEAW,EAAIC,KAAKC,IAAIC,KAAKC,OAAO,EACtBrC,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAUU,IAAKL,EAAIC,KAAKC,IAAII,OAC7BvC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,MAAM,SAASR,GAC1BtB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWW,UAAU,KAAKC,MAAM,OAAOR,EAAIC,KAAKQ,OAChD1C,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAIC,KAAKS,MACnC3C,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAIC,KAAKC,IAAII,OACvCvC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,MAAM,SAAjB,KAA2B9B,EAAAC,EAAAC,cAAA,KAAGE,KAAM6B,EAAIC,KAAKC,IAAIC,KAAMQ,OAAO,SAASC,IAAI,uBAAhD,IAAwE,IAAKZ,EAAIC,KAAKC,IAAIC,MAArH,MAICpC,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAUU,IAAKL,EAAIC,KAAKC,IAAII,OAC7BvC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,MAAM,SAASR,GAC1BtB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWW,UAAU,KAAKC,MAAM,OAAOR,EAAIC,KAAKQ,OAChD1C,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAIC,KAAKS,MACnC3C,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAIC,KAAKC,IAAII,OACvCvC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,MAAM,SAAjB,KAA4BG,EAAIC,KAAKC,IAAIC,KAAzC,iHCnDZ7B,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJoC,QAAS,OACTC,SAAU,QAEZC,YAAa,CACXC,OAAQxC,EAAMI,QAAQ,GACtBG,SAAU,IACVkC,SAAU,KAEZC,MAAO,CACLL,QAAS,OACTC,SAAU,QAEZK,KAAM,CACJH,OAAQ,GAEVI,QAAS,CACPzC,UAAWH,EAAMI,QAAQ,OAMvByC,EAAY,CAChBC,WAAY,CACVC,MAAO,CACLC,UAAWC,IACX/C,MAAO,OAOb,SAASgD,EAAUC,EAAMC,EAAYpD,GACnC,MAAO,CACLqD,YACgC,IAA9BD,EAAWE,QAAQH,GACfnD,EAAMuD,WAAWC,kBACjBxD,EAAMuD,WAAWE,kBAIZ,SAASC,EAAejD,GACnC,IAAMkD,EAAQlD,EAAMmD,MAEdlD,EAAUZ,IACVE,EAAQ6D,cAJ4BC,EAKNC,IAAMC,SAAS,IALTC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAKnCV,EALmCa,EAAA,GAKvBG,EALuBH,EAAA,GAc1C,OACE1E,EAAAC,EAAAC,cAAA,OAAKC,UAAWgB,EAAQT,MAEtBV,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAa3E,UAAWgB,EAAQ6B,aAC9BhD,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAYC,QAAQ,wBAAwB9D,EAAMwB,OAClD1C,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CACEC,UAAQ,EACRC,MAAOtB,EACPuB,SAfR,SAAsBC,GACpBR,EAAcQ,EAAMzC,OAAOuC,OAC3BjE,EAAMkE,SAASC,EAAMzC,OAAOuC,QActBG,MAAOtF,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAOC,GAAG,yBACjBC,YAAa,SAAAC,GAAQ,OACnB1F,EAAAC,EAAAC,cAAA,OAAKC,UAAWgB,EAAQgC,OACrBuC,EAAS1D,IAAI,SAAAmD,GAAK,OACjBnF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMrD,IAAK6C,EAAOS,MAAOT,EAAOhF,UAAWgB,EAAQiC,WAIzDE,UAAWA,GAEVc,EAAMpC,IAAI,SAAA4B,GAAI,OACb5D,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAUvD,IAAKsB,EAAKA,KAAMuB,MAAOvB,EAAKA,KAAMJ,MAAOG,EAAUC,EAAKA,KAAMC,EAAYpD,IACjFmD,EAAKA,eCgTPkC,6MAtTfC,cAAc,SAACC,GAAa,SAAAC,IAAA,OAAAA,EAAAtB,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAlG,EAAAmG,KAIpB,SAAAC,EAA0BnF,GAA1B,IAAAoF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3E,EAAA4E,EAAA,OAAAV,EAAAlG,EAAA6G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACuBC,EAAM,CACzBC,IAAG,4CAAAC,OAA8CpB,EAA9C,WAAAoB,OAAkElG,EAAMmG,UAAxE,YAAAD,OAA4FlG,EAAMoG,cAAlG,eAAAF,OAA6HlG,EAAMqG,iBAAnI,WAAAH,OAA6JlG,EAAMsG,MAAnK,WAAAJ,OAAkLlG,EAAMuG,MAAxL,eAAAL,OAA2MlG,EAAMwG,kBACpNC,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,oBAAqB,EACrBC,gBAAiB,sEAPzB,OACMzB,EADNS,EAAAiB,KAWIzB,EAAOD,EAAS2B,KAXpBzB,GAAA,EAAAC,GAAA,EAAAC,OAAAwB,EAAAnB,EAAAC,KAAA,EAAAL,EAYiBJ,EAZjB4B,OAAAC,YAAA,UAAA5B,GAAAI,EAAAD,EAAAM,QAAAoB,KAAA,CAAAtB,EAAAE,KAAA,gBAYUhF,EAZV2E,EAAAzB,MAAA4B,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAc+BC,EAAM,CACvBC,IAAG,qCAAAC,OAAuCnF,EAAIC,KAAKC,IAAIC,KAApD,6CACHuF,OAAQ,QAhBtB,QAccrB,EAddS,EAAAiB,KAkBS/F,EAAIC,KAAKC,IAAIC,KAAOkE,EAAS2B,KAAKK,SAAS,GAAGnB,IAlBvDJ,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAwB,GAAAxB,EAAA,kBAAAP,GAAA,EAAAO,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAyB,GAAAzB,EAAA,SAAAN,GAAA,EAAAC,EAAAK,EAAAyB,GAAA,QAAAzB,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAAR,GAAA,MAAAG,EAAA8B,QAAA9B,EAAA8B,SAAA,WAAA1B,EAAAC,KAAA,IAAAP,EAAA,CAAAM,EAAAE,KAAA,eAAAP,EAAA,eAAAK,EAAA2B,OAAA,mBAAA3B,EAAA2B,OAAA,YAqBAxH,EAAMyH,SAASpC,GArBf,yBAAAQ,EAAA6B,SAAAvC,EAAA,6CAJoBwC,MAAAC,KAAAC,WAEpBC,EAAK9H,MAAM+H,eAAejD,GA0B1B,KA5BoB,SAAAkD,GAAAjD,EAAA4C,MAAAC,KAAAC,WA6BhBI,CAAWH,EAAK9H,OAClB,MAAOkI,QAQjBC,qBAAqB,SAAClE,GACd,IAAImE,EAAK,GACLC,EAAYP,EAAK9H,MAAMqI,UACvBC,EAAM,GAHY,SAAAC,IAAA,OAAAA,EAAA9E,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAlG,EAAAmG,KAatB,SAAAsD,EAA0BxI,GAA1B,IAAAoF,EAAAC,EAAAoD,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9H,EAAA+H,EAAA,OAAA7D,EAAAlG,EAAA6G,KAAA,SAAAmD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,cAAAgD,EAAAhD,KAAA,EAC2BC,EAAM,CACzBC,IAAG,4CAAAC,OAA8C,EAA9C,UAAyDlG,EAAMmG,UAA/D,YAAAD,OAAmFlG,EAAMoG,cAAzF,eAAAF,OAAoHkC,EAAIY,OAAxH,WAAA9C,OAAwIlG,EAAMsG,MAA9I,WAAAJ,OAA6JlG,EAAMuG,MAAnK,eAAAL,OAAsLlG,EAAMwG,kBAC/LC,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,oBAAqB,EACrBC,gBAAiB,sEAP7B,OACUzB,EADV2D,EAAAjC,KAWQzB,EAAOD,EAAS2B,KAXxB0B,GAAA,EAAAC,GAAA,EAAAC,OAAA3B,EAAA+B,EAAAjD,KAAA,EAAA8C,EAYqBvD,EAZrB4B,OAAAC,YAAA,UAAAuB,GAAAI,EAAAD,EAAA7C,QAAAoB,KAAA,CAAA4B,EAAAhD,KAAA,gBAYchF,EAZd8H,EAAA5E,MAAA8E,EAAAjD,KAAA,GAAAiD,EAAAhD,KAAA,GAcmCC,EAAM,CACvBC,IAAG,qCAAAC,OAAuCnF,EAAIC,KAAKC,IAAIC,KAApD,6CACHuF,OAAQ,QAhB1B,QAckBrB,EAdlB2D,EAAAjC,KAkBa/F,EAAIC,KAAKC,IAAIC,KAAOkE,EAAS2B,KAAKK,SAAS,GAAGnB,IAlB3D8C,EAAAhD,KAAA,iBAAAgD,EAAAjD,KAAA,GAAAiD,EAAA1B,GAAA0B,EAAA,kBAAAN,GAAA,EAAAM,EAAAhD,KAAA,gBAAAgD,EAAAhD,KAAA,iBAAAgD,EAAAjD,KAAA,GAAAiD,EAAAzB,GAAAyB,EAAA,SAAAL,GAAA,EAAAC,EAAAI,EAAAzB,GAAA,QAAAyB,EAAAjD,KAAA,GAAAiD,EAAAjD,KAAA,GAAA2C,GAAA,MAAAG,EAAArB,QAAAqB,EAAArB,SAAA,WAAAwB,EAAAjD,KAAA,IAAA4C,EAAA,CAAAK,EAAAhD,KAAA,eAAA4C,EAAA,eAAAI,EAAAvB,OAAA,mBAAAuB,EAAAvB,OAAA,YAqBIxH,EAAMyH,SAASpC,GACfrF,EAAMiJ,aAAa7D,EAASsB,QAAQ,4BAtBxC,yBAAAqC,EAAArB,SAAAc,EAAA,6CAbsBb,MAAAC,KAAAC,WAItB5D,EAAMiF,QAAQ,SAASC,GACnBb,EAAMc,KAAKf,EAAUgB,KAAK,SAAAC,GAAI,OAAEA,EAAK5G,OAAOyG,OAEhDb,EAAMY,QAAQ,SAASC,GACnBf,EAAIgB,KAAKD,EAAQI,QA6BjB,KArCkB,SAAAC,GAAAjB,EAAAZ,MAAAC,KAAAC,WAsCdI,CAAWH,EAAK9H,OAClB,MAAOkI,IAMTJ,EAAK9H,MAAM+H,eAAe,GAE1BD,EAAK9H,MAAMyJ,oBAAoBrB,EAAIY,WAU/CU,sBAAsB,SAACzF,GACf,IAAImE,EAAK,GACLuB,EAAS7B,EAAK9H,MAAM2J,OACpBrB,EAAM,GAHa,SAAAsB,IAAA,OAAAA,EAAAnG,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAlG,EAAAmG,KAavB,SAAA2E,EAA0B7J,GAA1B,IAAAoF,EAAAC,EAAAyE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAnJ,EAAAoJ,EAAA,OAAAlF,EAAAlG,EAAA6G,KAAA,SAAAwE,GAAA,cAAAA,EAAAtE,KAAAsE,EAAArE,MAAA,cAAAqE,EAAArE,KAAA,EAC2BC,EAAM,CACzBC,IAAG,4CAAAC,OAA8C,EAA9C,UAAyDlG,EAAMmG,UAA/D,YAAAD,OAAmFkC,EAAIY,OAAvF,eAAA9C,OAA2GlG,EAAMqG,iBAAjH,WAAAH,OAA2IlG,EAAMsG,MAAjJ,WAAAJ,OAAgKlG,EAAMuG,MAAtK,eAAAL,OAAyLlG,EAAMwG,kBAClMC,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,oBAAqB,EACrBC,gBAAiB,sEAP7B,OACUzB,EADVgF,EAAAtD,KAWQzB,EAAOD,EAAS2B,KAXxB+C,GAAA,EAAAC,GAAA,EAAAC,OAAAhD,EAAAoD,EAAAtE,KAAA,EAAAmE,EAYqB5E,EAZrB4B,OAAAC,YAAA,UAAA4C,GAAAI,EAAAD,EAAAlE,QAAAoB,KAAA,CAAAiD,EAAArE,KAAA,gBAYchF,EAZdmJ,EAAAjG,MAAAmG,EAAAtE,KAAA,GAAAsE,EAAArE,KAAA,GAcmCC,EAAM,CACvBC,IAAG,qCAAAC,OAAuCnF,EAAIC,KAAKC,IAAIC,KAApD,6CACHuF,OAAQ,QAhB1B,QAckBrB,EAdlBgF,EAAAtD,KAkBa/F,EAAIC,KAAKC,IAAIC,KAAOkE,EAAS2B,KAAKK,SAAS,GAAGnB,IAlB3DmE,EAAArE,KAAA,iBAAAqE,EAAAtE,KAAA,GAAAsE,EAAA/C,GAAA+C,EAAA,kBAAAN,GAAA,EAAAM,EAAArE,KAAA,gBAAAqE,EAAArE,KAAA,iBAAAqE,EAAAtE,KAAA,GAAAsE,EAAA9C,GAAA8C,EAAA,SAAAL,GAAA,EAAAC,EAAAI,EAAA9C,GAAA,QAAA8C,EAAAtE,KAAA,GAAAsE,EAAAtE,KAAA,GAAAgE,GAAA,MAAAG,EAAA1C,QAAA0C,EAAA1C,SAAA,WAAA6C,EAAAtE,KAAA,IAAAiE,EAAA,CAAAK,EAAArE,KAAA,eAAAiE,EAAA,eAAAI,EAAA5C,OAAA,mBAAA4C,EAAA5C,OAAA,YAqBIxH,EAAMyH,SAASpC,GACfrF,EAAMiJ,aAAa7D,EAASsB,QAAQ,4BAtBxC,yBAAA0D,EAAA1C,SAAAmC,EAAA,6CAbuBlC,MAAAC,KAAAC,WAIvB5D,EAAMiF,QAAQ,SAASC,GACnBb,EAAMc,KAAKO,EAAON,KAAK,SAAAC,GAAI,OAAEA,EAAK5G,OAAOyG,OAE7Cb,EAAMY,QAAQ,SAASC,GACnBf,EAAIgB,KAAKD,EAAQkB,QA6BjB,KArCmB,SAAAC,GAAAV,EAAAjC,MAAAC,KAAAC,WAsCfI,CAAWH,EAAK9H,OAClB,MAAOkI,IAITJ,EAAK9H,MAAM+H,eAAe,GAE1BD,EAAK9H,MAAMuK,iBAAiBnC,EAAIY,WAU5CwB,0BAA0B,SAACvG,GACnB,IAAImE,EAAK,GACLqC,EAAY3C,EAAK9H,MAAMyK,UACvBnC,EAAM,GAHiB,SAAAoC,IAAA,OAAAA,EAAAjH,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAlG,EAAAmG,KAc3B,SAAAyF,EAA0B3K,GAA1B,IAAAoF,EAAAC,EAAAuF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAjK,EAAAkK,EAAA,OAAAhG,EAAAlG,EAAA6G,KAAA,SAAAsF,GAAA,cAAAA,EAAApF,KAAAoF,EAAAnF,MAAA,cAAAmF,EAAAnF,KAAA,EAC2BC,EAAM,CACzBC,IAAG,4CAAAC,OAA8C,EAA9C,UAAyDlG,EAAMmG,UAA/D,YAAAD,OAAmFlG,EAAMoG,cAAzF,eAAAF,OAAoHlG,EAAMqG,iBAA1H,WAAAH,OAAoJlG,EAAMsG,MAA1J,WAAAJ,OAAyKlG,EAAMuG,MAA/K,eAAAL,OAAkMkC,EAAIY,QACzMvC,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,oBAAqB,EACrBC,gBAAiB,sEAP7B,OACUzB,EADV8F,EAAApE,KAWQzB,EAAOD,EAAS2B,KAXxB6D,GAAA,EAAAC,GAAA,EAAAC,OAAA9D,EAAAkE,EAAApF,KAAA,EAAAiF,EAYqB1F,EAZrB4B,OAAAC,YAAA,UAAA0D,GAAAI,EAAAD,EAAAhF,QAAAoB,KAAA,CAAA+D,EAAAnF,KAAA,gBAYchF,EAZdiK,EAAA/G,MAAAiH,EAAApF,KAAA,GAAAoF,EAAAnF,KAAA,GAcmCC,EAAM,CACvBC,IAAG,qCAAAC,OAAuCnF,EAAIC,KAAKC,IAAIC,KAApD,6CACHuF,OAAQ,QAhB1B,QAckBrB,EAdlB8F,EAAApE,KAkBa/F,EAAIC,KAAKC,IAAIC,KAAOkE,EAAS2B,KAAKK,SAAS,GAAGnB,IAlB3DiF,EAAAnF,KAAA,iBAAAmF,EAAApF,KAAA,GAAAoF,EAAA7D,GAAA6D,EAAA,kBAAAN,GAAA,EAAAM,EAAAnF,KAAA,gBAAAmF,EAAAnF,KAAA,iBAAAmF,EAAApF,KAAA,GAAAoF,EAAA5D,GAAA4D,EAAA,SAAAL,GAAA,EAAAC,EAAAI,EAAA5D,GAAA,QAAA4D,EAAApF,KAAA,GAAAoF,EAAApF,KAAA,GAAA8E,GAAA,MAAAG,EAAAxD,QAAAwD,EAAAxD,SAAA,WAAA2D,EAAApF,KAAA,IAAA+E,EAAA,CAAAK,EAAAnF,KAAA,eAAA+E,EAAA,eAAAI,EAAA1D,OAAA,mBAAA0D,EAAA1D,OAAA,YAqBIxH,EAAMyH,SAASpC,GACfrF,EAAMiJ,aAAa7D,EAASsB,QAAQ,4BAtBxC,yBAAAwE,EAAAxD,SAAAiD,EAAA,6CAd2BhD,MAAAC,KAAAC,WAI3B5D,EAAMiF,QAAQ,SAASC,GACnBb,EAAMc,KAAKqB,EAAUpB,KAAK,SAAA8B,GAAI,OAAEA,EAAKzI,OAAOyG,OAEhDb,EAAMY,QAAQ,SAASC,GACnBf,EAAIgB,KAAKD,EAAQI,QA8BjB,KAtCuB,SAAA6B,GAAAV,EAAA/C,MAAAC,KAAAC,WAuCnBI,CAAWH,EAAK9H,OAClB,MAAOkI,IAKbJ,EAAK9H,MAAM+H,eAAe,GAE1BD,EAAK9H,MAAMqL,yBAAoBjD,EAAIY,WAS3CsC,kBAAkB,SAACC,GAAI,SAAAC,IAAA,OAAAA,EAAA/H,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAlG,EAAAmG,KAGf,SAAAuG,EAA0BzL,GAA1B,IAAAoF,EAAAC,EAAAqG,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/K,EAAAgL,EAAA,OAAA9G,EAAAlG,EAAA6G,KAAA,SAAAoG,GAAA,cAAAA,EAAAlG,KAAAkG,EAAAjG,MAAA,cAAAiG,EAAAjG,KAAA,EAC2BC,EAAM,CACzBC,IAAG,4CAAAC,OAA8C,EAA9C,UAAyDlG,EAAMmG,UAA/D,YAAAD,OAAmFlG,EAAMoG,cAAzF,eAAAF,OAAoHlG,EAAMqG,iBAA1H,WAAAH,OAAoJqF,EAAE7J,OAAOuC,MAA7J,WAAAiC,OAA4KlG,EAAMuG,MAAlL,eAAAL,OAAqMlG,EAAMwG,kBAC9MC,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,oBAAqB,EACrBC,gBAAiB,sEAP7B,OACUzB,EADV4G,EAAAlF,KAWQzB,EAAOD,EAAS2B,KAXxB2E,GAAA,EAAAC,GAAA,EAAAC,OAAA5E,EAAAgF,EAAAlG,KAAA,EAAA+F,EAYqBxG,EAZrB4B,OAAAC,YAAA,UAAAwE,GAAAI,EAAAD,EAAA9F,QAAAoB,KAAA,CAAA6E,EAAAjG,KAAA,gBAYchF,EAZd+K,EAAA7H,MAAA+H,EAAAlG,KAAA,GAAAkG,EAAAjG,KAAA,GAcmCC,EAAM,CACvBC,IAAG,qCAAAC,OAAuCnF,EAAIC,KAAKC,IAAIC,KAApD,6CACHuF,OAAQ,QAhB1B,QAckBrB,EAdlB4G,EAAAlF,KAkBa/F,EAAIC,KAAKC,IAAIC,KAAOkE,EAAS2B,KAAKK,SAAS,GAAGnB,IAlB3D+F,EAAAjG,KAAA,iBAAAiG,EAAAlG,KAAA,GAAAkG,EAAA3E,GAAA2E,EAAA,kBAAAN,GAAA,EAAAM,EAAAjG,KAAA,gBAAAiG,EAAAjG,KAAA,iBAAAiG,EAAAlG,KAAA,GAAAkG,EAAA1E,GAAA0E,EAAA,SAAAL,GAAA,EAAAC,EAAAI,EAAA1E,GAAA,QAAA0E,EAAAlG,KAAA,GAAAkG,EAAAlG,KAAA,GAAA4F,GAAA,MAAAG,EAAAtE,QAAAsE,EAAAtE,SAAA,WAAAyE,EAAAlG,KAAA,IAAA6F,EAAA,CAAAK,EAAAjG,KAAA,eAAA6F,EAAA,eAAAI,EAAAxE,OAAA,mBAAAwE,EAAAxE,OAAA,YAqBIxH,EAAMyH,SAASpC,GACfrF,EAAMiJ,aAAa7D,EAASsB,QAAQ,4BAtBxC,yBAAAsF,EAAAtE,SAAA+D,EAAA,6CAHe9D,MAAAC,KAAAC,WACfC,EAAK9H,MAAMiM,SAASV,EAAE7J,OAAOuC,OA0BzB,KA3BW,SAAAiI,GAAAV,EAAA7D,MAAAC,KAAAC,WA4BPI,CAAWH,EAAK9H,OAClB,MAAOkI,IAGbJ,EAAK9H,MAAM+H,eAAe,MAMlCoE,kBAAkB,SAACZ,GAAI,SAAAa,IAAA,OAAAA,EAAA3I,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAlG,EAAAmG,KAGf,SAAAmH,EAA0BrM,GAA1B,IAAAoF,EAAAC,EAAAiH,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3L,EAAA4L,EAAA,OAAA1H,EAAAlG,EAAA6G,KAAA,SAAAgH,GAAA,cAAAA,EAAA9G,KAAA8G,EAAA7G,MAAA,cAAA6G,EAAA7G,KAAA,EAC2BC,EAAM,CACzBC,IAAG,4CAAAC,OAA8C,EAA9C,UAAyDlG,EAAMmG,UAA/D,YAAAD,OAAmFlG,EAAMoG,cAAzF,eAAAF,OAAoHlG,EAAMqG,iBAA1H,WAAAH,OAAoJlG,EAAMsG,MAA1J,WAAAJ,OAAyKqF,EAAE7J,OAAOuC,MAAlL,eAAAiC,OAAqMlG,EAAMwG,kBAC9MC,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,oBAAqB,EACrBC,gBAAiB,sEAP7B,OACUzB,EADVwH,EAAA9F,KAWQzB,EAAOD,EAAS2B,KAXxBuF,GAAA,EAAAC,GAAA,EAAAC,OAAAxF,EAAA4F,EAAA9G,KAAA,EAAA2G,EAYqBpH,EAZrB4B,OAAAC,YAAA,UAAAoF,GAAAI,EAAAD,EAAA1G,QAAAoB,KAAA,CAAAyF,EAAA7G,KAAA,gBAYchF,EAZd2L,EAAAzI,MAAA2I,EAAA9G,KAAA,GAAA8G,EAAA7G,KAAA,GAcmCC,EAAM,CACvBC,IAAG,qCAAAC,OAAuCnF,EAAIC,KAAKC,IAAIC,KAApD,6CACHuF,OAAQ,QAhB1B,QAckBrB,EAdlBwH,EAAA9F,KAkBa/F,EAAIC,KAAKC,IAAIC,KAAOkE,EAAS2B,KAAKK,SAAS,GAAGnB,IAlB3D2G,EAAA7G,KAAA,iBAAA6G,EAAA9G,KAAA,GAAA8G,EAAAvF,GAAAuF,EAAA,kBAAAN,GAAA,EAAAM,EAAA7G,KAAA,gBAAA6G,EAAA7G,KAAA,iBAAA6G,EAAA9G,KAAA,GAAA8G,EAAAtF,GAAAsF,EAAA,SAAAL,GAAA,EAAAC,EAAAI,EAAAtF,GAAA,QAAAsF,EAAA9G,KAAA,GAAA8G,EAAA9G,KAAA,GAAAwG,GAAA,MAAAG,EAAAlF,QAAAkF,EAAAlF,SAAA,WAAAqF,EAAA9G,KAAA,IAAAyG,EAAA,CAAAK,EAAA7G,KAAA,eAAAyG,EAAA,eAAAI,EAAApF,OAAA,mBAAAoF,EAAApF,OAAA,YAqBIxH,EAAMyH,SAASpC,GACfrF,EAAMiJ,aAAa7D,EAASsB,QAAQ,4BAtBxC,yBAAAkG,EAAAlF,SAAA2E,EAAA,6CAHe1E,MAAAC,KAAAC,WACfC,EAAK9H,MAAM6M,SAAStB,EAAE7J,OAAOuC,OA0BzB,KA3BW,SAAA6I,GAAAV,EAAAzE,MAAAC,KAAAC,WA4BPI,CAAWH,EAAK9H,OAClB,MAAOkI,IAIbJ,EAAK9H,MAAM+H,eAAe,0FA9V9BH,KAAK5H,MAAMuK,iBAAiB,IAC5B3C,KAAK5H,MAAMyJ,oBAAoB,IAC/B7B,KAAK5H,MAAMqL,yBAAoB,IAC/BzD,KAAK5H,MAAMiM,SAAS,IACpBrE,KAAK5H,MAAM6M,SAAS,IACpBjF,KAAK5H,MAAM+H,eAAe,GAC1BH,KAAK5H,MAAMyH,SAAS,IACpBG,KAAK5H,MAAMiJ,aAAa,mMAGDjD,EAAM,CACzBC,IAAG,4CAAAC,OAA8C0B,KAAK5H,MAAM+M,YAAzD,WAAA7G,OAA8E0B,KAAK5H,MAAMmG,UAAzF,YAAAD,OAA6G0B,KAAK5H,MAAMoG,cAAxH,eAAAF,OAAmJ0B,KAAK5H,MAAMqG,iBAA9J,WAAAH,OAAwL0B,KAAK5H,MAAMsG,MAAnM,WAAAJ,OAAkN0B,KAAK5H,MAAMuG,MAA7N,eAAAL,OAAgP0B,KAAK5H,MAAMwG,kBAC9PC,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,oBAAqB,EACrBC,gBAAiB,6EANnBzB,SAUFC,EAAOD,EAAS2B,mCACH1B,2EAAPtE,8BAEqBiF,EAAM,CACvBC,IAAG,qCAAAC,OAAuCnF,EAAIC,KAAKC,IAAIC,KAApD,6CACHuF,OAAQ,gBAFRrB,SAILrE,EAAIC,KAAKC,IAAIC,KAAOkE,EAAS2B,KAAKK,SAAS,GAAGnB,2UAGvD2B,KAAK5H,MAAMyH,SAASpC,GACpBuC,KAAK5H,MAAMiJ,aAAa7D,EAASsB,QAAQ,sCAGhBV,EAAO,CAC5BC,IAAG,oCACHQ,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,oBAAqB,EACrBC,gBAAiB,qFANf8C,SASV/B,KAAK5H,MAAMgN,UAAUrD,EAAO5C,gBAEAf,EAAO,CAC/BC,IAAG,uCACHQ,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,oBAAqB,EACrBC,gBAAiB,qFANfwB,SAUVT,KAAK5H,MAAMiN,aAAa5E,EAAUtB,gBAGNf,EAAM,CAC9BC,IAAG,uCACHQ,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,oBAAqB,EACrBC,gBAAiB,8EANf4D,SAUV7C,KAAK5H,MAAMkN,aAAazC,EAAU1D,6KA+R9B,IAAAoG,EACuCvF,KAAK5H,MAAzC2J,EADHwD,EACGxD,OAAOtB,EADV8E,EACU9E,UAAUlI,EADpBgN,EACoBhN,MAAMsK,EAD1B0C,EAC0B1C,UAC9B,OACI3L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAW,UAAf,aACAH,EAAAC,EAAAC,cAAA,+CACKF,EAAAC,EAAAC,cAAA,SAAOoO,KAAK,OAAOlJ,SAAU0D,KAAK0D,qBAEvCxM,EAAAC,EAAAC,cAAA,sDACKF,EAAAC,EAAAC,cAAA,SAAOoO,KAAK,OAAOlJ,SAAU0D,KAAKuE,qBAEvCrN,EAAAC,EAAAC,cAACiE,EAAD,CAAQE,MAAOkF,EAAW7G,MAAM,WAAW0C,SAAU0D,KAAKO,uBAC1DrJ,EAAAC,EAAAC,cAACiE,EAAD,CAAQE,MAAOwG,EAASnI,MAAM,SAAS0C,SAAU0D,KAAK8B,wBACtD5K,EAAAC,EAAAC,cAACiE,EAAD,CAAQE,MAAOsH,EAAYjJ,MAAM,YAAY0C,SAAU0D,KAAK4C,4BAC5D1L,EAAAC,EAAAC,cAACe,EAAD,CAAOI,MAAOA,EAAOE,KAAOuH,KAAK5H,MAAM+M,YAAazM,MAAQsH,KAAK5H,MAAMmG,YACvErH,EAAAC,EAAAC,cAACqO,EAAAtO,EAAD,CACIgO,YAAanF,KAAK5H,MAAM+M,YACxBO,WAAY1F,KAAK5H,MAAMuN,UACvBC,kBAAmB5F,KAAK/C,cACxBtF,MAAM,0BAzXCkO,qBCKjBC,EAAW,CAETvN,MAAO,GACPwJ,OAAQ,GACRtB,UAAW,GACXlC,UAAW,GACXoH,UAAW,EACXR,YAAa,EACb3G,cAAe,GACfC,iBAAkB,GAClBG,iBAAkB,GAClBiE,UAAU,GACVnE,MAAO,GACPC,MAAO,IAuEAoH,EAjES,WAA6B,IAA5BC,EAA4B/F,UAAA1G,OAAA,QAAA6F,IAAAa,UAAA,GAAAA,UAAA,GAApB6F,EAAWG,EAAShG,UAAA1G,OAAA,EAAA0G,UAAA,QAAAb,EAGjD,OAAQ6G,EAAOT,MACX,IArCW,cAsCP,OAAO3J,OAAAqK,EAAA,EAAArK,CAAA,GAAImK,EAAX,CACIzN,MAAO0N,EAAO1N,QAEtB,IAxCY,eAyCR,OAAOsD,OAAAqK,EAAA,EAAArK,CAAA,GAAImK,EAAX,CACIjE,OAAQkE,EAAOlE,SAEvB,IA3Ce,kBA4CX,OAAOlG,OAAAqK,EAAA,EAAArK,CAAA,GAAImK,EAAX,CACIvF,UAAWwF,EAAOxF,YAE1B,IA9CiB,qBA+Cb,OAAO5E,OAAAqK,EAAA,EAAArK,CAAA,GAAImK,EAAX,CACGb,YAAac,EAAOd,cAE3B,IAjDmB,uBAkDf,OAAOtJ,OAAAqK,EAAA,EAAArK,CAAA,GAAImK,EAAX,CACKxH,cAAeyH,EAAOzH,gBAE/B,IApDsB,0BAqDlB,OAAO3C,OAAAqK,EAAA,EAAArK,CAAA,GAAImK,EAAX,CACKvH,iBAAkBwH,EAAOxH,mBAElC,IAvDe,mBAwDX,OAAO5C,OAAAqK,EAAA,EAAArK,CAAA,GAAImK,EAAX,CACKL,UAAWM,EAAON,YAE3B,IA1DU,cA2DN,OAAO9J,OAAAqK,EAAA,EAAArK,CAAA,GAAImK,EAAX,CACKtH,MAAOuH,EAAOvH,QAEvB,IA7DU,cA8DN,OAAO7C,OAAAqK,EAAA,EAAArK,CAAA,GAAImK,EAAX,CACKrH,MAAOsH,EAAOtH,QAEvB,IAhEc,kBAiEV,OAAO9C,OAAAqK,EAAA,EAAArK,CAAA,GAAImK,EAAX,CACInD,UAAWoD,EAAOpD,YAE1B,IAnEsB,0BAoElB,OAAOhH,OAAAqK,EAAA,EAAArK,CAAA,GAAImK,EAAX,CACIpH,iBAAkBqH,EAAOrH,mBAEjC,QACG,OAAOoH,ICZHG,cAhEO,SAACH,GAAS,IACvBI,EAAYJ,EAAZI,SACL,MAAM,CACE7N,MAAO6N,EAAS7N,MAChBwJ,OAAQqE,EAASrE,OACjBtB,UAAW2F,EAAS3F,UACpBkF,UAAWS,EAAST,UACpBpH,UAAW6H,EAAS7H,UACpB4G,YAAaiB,EAASjB,YACtB3G,cAAe4H,EAAS5H,cACxBC,iBAAkB2H,EAAS3H,iBAC3BoE,UAAUuD,EAASvD,UACnBjE,iBAAkBwH,EAASxH,iBAC3BF,MAAO0H,EAAS1H,MAChBC,MAAOyH,EAASzH,QAKH,SAAC0H,GACtB,MAAM,CACFxG,SAAU,SAACtH,GACR8N,ED0DiB,SAAC9N,GAAD,MAAY,CAACiN,KAtFtB,cAsFyCjN,SC1DxC+N,CAAa/N,KAEzB6M,UAAW,SAACrD,GACTsE,EDwDkB,SAACtE,GAAD,MAAa,CAACyD,KAtFvB,eAsF2CzD,UCxD3CwE,CAAcxE,KAE1BsD,aAAc,SAAC5E,GACZ4F,EDsDqB,SAAC5F,GAAD,MAAgB,CAAC+E,KAtF1B,kBAsFiD/E,aCtDpD+F,CAAiB/F,KAE7BN,eAAe,SAAC1H,GACZ4N,EDoDwC,CAACb,KAtF5B,qBAsFsDL,YCpDvC1M,KAEhCoJ,oBAAoB,SAACpB,GACjB4F,EDkDkD,CAACb,KArFjC,0BAqFgE/G,iBClDjDgC,KAErCkC,iBAAiB,SAACZ,GACdsE,EDgD4C,CAACb,KAvF9B,uBAuF0DhH,cChD3CuD,KAElCV,aAAa,SAACsE,GACVU,ED8CoB,SAACV,GAAD,MAAgB,CAACH,KAtF1B,mBAsFkDG,aC9CpDc,CAAiBd,KAI9BtB,SAAS,SAAC3F,GACN2H,ED0CgB,SAAC3H,GAAD,MAAY,CAAC8G,KAtFvB,cAsF0C9G,SC1CvCgI,CAAahI,KAE1BuG,SAAS,SAACtG,GACN0H,EDwCgB,SAAC1H,GAAD,MAAY,CAAC6G,KAtFvB,cAsF0C7G,SCxCvCgI,CAAahI,KAK1B2G,aAAa,SAACzC,GACVwD,EDmCoB,SAACxD,GAAD,MAAgB,CAAC2C,KAtF3B,kBAsFkD3C,aCnCnD+D,CAAiB/D,KAE9BY,2BAAoB,SAAC7E,GACjByH,EDiC2B,SAACzH,GAAD,MAAuB,CAAC4G,KAtFjC,0BAsFgE5G,oBCjCzEiI,CAAwBjI,OAO9BuH,CAA6CnJ,GC5DtDvF,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,MAAO,OACPC,UAAWH,EAAMI,QAAQ,GACzBC,UAAW,QAEbC,MAAO,CACLC,SAAU,QAKC,SAASC,EAAYC,GAEpC,IAAMC,EAAUZ,IAEZa,EAAMF,EAAMG,MACZC,GAAUJ,EAAMK,KAAK,GAAGL,EAAMM,MAIhC,OACExB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAOtB,UAAWgB,EAAQT,MACxBV,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAOvB,UAAWgB,EAAQJ,OACxBf,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACE3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACE5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,eACA7B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,cACA7B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,MAAM,SAAjB,QACA9B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACA9B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,MAAM,SAAjB,2BAGA9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACGX,EAAKY,IAAI,SAAAC,GAAG,OACXX,IACAW,EAAIE,IAAIC,KAAKC,OAAO,EAGhBrC,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAUU,IAAKL,EAAIE,IAAII,OACzBvC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,MAAM,SAASR,GAC1BtB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWW,UAAU,KAAKC,MAAM,OAAOR,EAAIS,OAC3C1C,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAIU,MAC9B3C,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAIE,IAAII,OAClCvC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,MAAM,SAAjB,KAA2B9B,EAAAC,EAAAC,cAAA,KAAGE,KAAM6B,EAAIE,IAAIC,KAAMQ,OAAO,SAAQC,IAAI,uBAA1C,IAAkE,IAAKZ,EAAIE,IAAIC,MAA1G,MAICpC,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAUU,IAAKL,EAAIE,IAAII,OACxBvC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,MAAM,SAASR,GAC1BtB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWW,UAAU,KAAKC,MAAM,OAAOR,EAAIS,OAC3C1C,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAIU,MAC9B3C,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAIE,IAAII,OAClCvC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,MAAM,SAAjB,KAA4BG,EAAIE,IAAIC,KAApC,kBC8UHwN,6MAtTf7J,cAAc,SAACC,GAAa,SAAAC,IAAA,OAAAA,EAAAtB,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAlG,EAAAmG,KAIpB,SAAAC,EAA0BnF,GAA1B,IAAAoF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3E,EAAA4E,EAAA,OAAAV,EAAAlG,EAAA6G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACuBC,EAAM,CACzBC,IAAG,2CAAAC,OAA6CpB,EAA7C,WAAAoB,OAAiElG,EAAMmG,UAAvE,YAAAD,OAA2FlG,EAAMoG,cAAjG,eAAAF,OAA4HlG,EAAMqG,iBAAlI,WAAAH,OAA4JlG,EAAMsG,MAAlK,WAAAJ,OAAiLlG,EAAMuG,MAAvL,eAAAL,OAA0MlG,EAAMwG,kBACnNC,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,oBAAqB,EACrBC,gBAAiB,sEAPzB,OACMzB,EADNS,EAAAiB,KAWIzB,EAAOD,EAAS2B,KAXpBzB,GAAA,EAAAC,GAAA,EAAAC,OAAAwB,EAAAnB,EAAAC,KAAA,EAAAL,EAYiBJ,EAZjB4B,OAAAC,YAAA,UAAA5B,GAAAI,EAAAD,EAAAM,QAAAoB,KAAA,CAAAtB,EAAAE,KAAA,gBAYUhF,EAZV2E,EAAAzB,MAAA4B,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAc+BC,EAAM,CACvBC,IAAG,qCAAAC,OAAuCnF,EAAIE,IAAIC,KAA/C,6CACHuF,OAAQ,QAhBtB,QAccrB,EAddS,EAAAiB,KAkBS/F,EAAIE,IAAIC,KAAOkE,EAAS2B,KAAKK,SAAS,GAAGnB,IAlBlDJ,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAwB,GAAAxB,EAAA,kBAAAP,GAAA,EAAAO,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAyB,GAAAzB,EAAA,SAAAN,GAAA,EAAAC,EAAAK,EAAAyB,GAAA,QAAAzB,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAAR,GAAA,MAAAG,EAAA8B,QAAA9B,EAAA8B,SAAA,WAAA1B,EAAAC,KAAA,IAAAP,EAAA,CAAAM,EAAAE,KAAA,eAAAP,EAAA,eAAAK,EAAA2B,OAAA,mBAAA3B,EAAA2B,OAAA,YAqBAxH,EAAMyH,SAASpC,GArBf,yBAAAQ,EAAA6B,SAAAvC,EAAA,6CAJoBwC,MAAAC,KAAAC,WAEpBC,EAAK9H,MAAM+H,eAAejD,GA0B1B,KA5BoB,SAAAkD,GAAAjD,EAAA4C,MAAAC,KAAAC,WA6BhBI,CAAWH,EAAK9H,OAClB,MAAOkI,QAQjBC,qBAAqB,SAAClE,GACd,IAAImE,EAAK,GACLC,EAAYP,EAAK9H,MAAMqI,UACvBC,EAAM,GAHY,SAAAC,IAAA,OAAAA,EAAA9E,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAlG,EAAAmG,KAatB,SAAAsD,EAA0BxI,GAA1B,IAAAoF,EAAAC,EAAAoD,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9H,EAAA+H,EAAA,OAAA7D,EAAAlG,EAAA6G,KAAA,SAAAmD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,cAAAgD,EAAAhD,KAAA,EAC2BC,EAAM,CACzBC,IAAG,2CAAAC,OAA6C,EAA7C,UAAwDlG,EAAMmG,UAA9D,YAAAD,OAAkFlG,EAAMoG,cAAxF,eAAAF,OAAmHkC,EAAIY,OAAvH,WAAA9C,OAAuIlG,EAAMsG,MAA7I,WAAAJ,OAA4JlG,EAAMuG,MAAlK,eAAAL,OAAqLlG,EAAMwG,kBAC9LC,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,oBAAqB,EACrBC,gBAAiB,sEAP7B,OACUzB,EADV2D,EAAAjC,KAWQzB,EAAOD,EAAS2B,KAXxB0B,GAAA,EAAAC,GAAA,EAAAC,OAAA3B,EAAA+B,EAAAjD,KAAA,EAAA8C,EAYqBvD,EAZrB4B,OAAAC,YAAA,UAAAuB,GAAAI,EAAAD,EAAA7C,QAAAoB,KAAA,CAAA4B,EAAAhD,KAAA,gBAYchF,EAZd8H,EAAA5E,MAAA8E,EAAAjD,KAAA,GAAAiD,EAAAhD,KAAA,GAcmCC,EAAM,CACvBC,IAAG,qCAAAC,OAAuCnF,EAAIE,IAAIC,KAA/C,6CACHuF,OAAQ,QAhB1B,QAckBrB,EAdlB2D,EAAAjC,KAkBa/F,EAAIE,IAAIC,KAAOkE,EAAS2B,KAAKK,SAAS,GAAGnB,IAlBtD8C,EAAAhD,KAAA,iBAAAgD,EAAAjD,KAAA,GAAAiD,EAAA1B,GAAA0B,EAAA,kBAAAN,GAAA,EAAAM,EAAAhD,KAAA,gBAAAgD,EAAAhD,KAAA,iBAAAgD,EAAAjD,KAAA,GAAAiD,EAAAzB,GAAAyB,EAAA,SAAAL,GAAA,EAAAC,EAAAI,EAAAzB,GAAA,QAAAyB,EAAAjD,KAAA,GAAAiD,EAAAjD,KAAA,GAAA2C,GAAA,MAAAG,EAAArB,QAAAqB,EAAArB,SAAA,WAAAwB,EAAAjD,KAAA,IAAA4C,EAAA,CAAAK,EAAAhD,KAAA,eAAA4C,EAAA,eAAAI,EAAAvB,OAAA,mBAAAuB,EAAAvB,OAAA,YAqBIxH,EAAMyH,SAASpC,GACfrF,EAAMiJ,aAAa7D,EAASsB,QAAQ,4BAtBxC,yBAAAqC,EAAArB,SAAAc,EAAA,6CAbsBb,MAAAC,KAAAC,WAItB5D,EAAMiF,QAAQ,SAASC,GACnBb,EAAMc,KAAKf,EAAUgB,KAAK,SAAAC,GAAI,OAAEA,EAAK5G,OAAOyG,OAEhDb,EAAMY,QAAQ,SAASC,GACnBf,EAAIgB,KAAKD,EAAQI,QA6BjB,KArCkB,SAAAC,GAAAjB,EAAAZ,MAAAC,KAAAC,WAsCdI,CAAWH,EAAK9H,OAClB,MAAOkI,IAMTJ,EAAK9H,MAAM+H,eAAe,GAE1BD,EAAK9H,MAAMyJ,oBAAoBrB,EAAIY,WAU/CU,sBAAsB,SAACzF,GACf,IAAImE,EAAK,GACLuB,EAAS7B,EAAK9H,MAAM2J,OACpBrB,EAAM,GAHa,SAAAsB,IAAA,OAAAA,EAAAnG,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAlG,EAAAmG,KAavB,SAAA2E,EAA0B7J,GAA1B,IAAAoF,EAAAC,EAAAyE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAnJ,EAAAoJ,EAAA,OAAAlF,EAAAlG,EAAA6G,KAAA,SAAAwE,GAAA,cAAAA,EAAAtE,KAAAsE,EAAArE,MAAA,cAAAqE,EAAArE,KAAA,EAC2BC,EAAM,CACzBC,IAAG,2CAAAC,OAA6C,EAA7C,UAAwDlG,EAAMmG,UAA9D,YAAAD,OAAkFkC,EAAIY,OAAtF,eAAA9C,OAA0GlG,EAAMqG,iBAAhH,WAAAH,OAA0IlG,EAAMsG,MAAhJ,WAAAJ,OAA+JlG,EAAMuG,MAArK,eAAAL,OAAwLlG,EAAMwG,kBACjMC,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,oBAAqB,EACrBC,gBAAiB,sEAP7B,OACUzB,EADVgF,EAAAtD,KAWQzB,EAAOD,EAAS2B,KAXxB+C,GAAA,EAAAC,GAAA,EAAAC,OAAAhD,EAAAoD,EAAAtE,KAAA,EAAAmE,EAYqB5E,EAZrB4B,OAAAC,YAAA,UAAA4C,GAAAI,EAAAD,EAAAlE,QAAAoB,KAAA,CAAAiD,EAAArE,KAAA,gBAYchF,EAZdmJ,EAAAjG,MAAAmG,EAAAtE,KAAA,GAAAsE,EAAArE,KAAA,GAcmCC,EAAM,CACvBC,IAAG,qCAAAC,OAAuCnF,EAAIE,IAAIC,KAA/C,6CACHuF,OAAQ,QAhB1B,QAckBrB,EAdlBgF,EAAAtD,KAkBa/F,EAAIE,IAAIC,KAAOkE,EAAS2B,KAAKK,SAAS,GAAGnB,IAlBtDmE,EAAArE,KAAA,iBAAAqE,EAAAtE,KAAA,GAAAsE,EAAA/C,GAAA+C,EAAA,kBAAAN,GAAA,EAAAM,EAAArE,KAAA,gBAAAqE,EAAArE,KAAA,iBAAAqE,EAAAtE,KAAA,GAAAsE,EAAA9C,GAAA8C,EAAA,SAAAL,GAAA,EAAAC,EAAAI,EAAA9C,GAAA,QAAA8C,EAAAtE,KAAA,GAAAsE,EAAAtE,KAAA,GAAAgE,GAAA,MAAAG,EAAA1C,QAAA0C,EAAA1C,SAAA,WAAA6C,EAAAtE,KAAA,IAAAiE,EAAA,CAAAK,EAAArE,KAAA,eAAAiE,EAAA,eAAAI,EAAA5C,OAAA,mBAAA4C,EAAA5C,OAAA,YAqBIxH,EAAMyH,SAASpC,GACfrF,EAAMiJ,aAAa7D,EAASsB,QAAQ,4BAtBxC,yBAAA0D,EAAA1C,SAAAmC,EAAA,6CAbuBlC,MAAAC,KAAAC,WAIvB5D,EAAMiF,QAAQ,SAASC,GACnBb,EAAMc,KAAKO,EAAON,KAAK,SAAAC,GAAI,OAAEA,EAAK5G,OAAOyG,OAE7Cb,EAAMY,QAAQ,SAASC,GACnBf,EAAIgB,KAAKD,EAAQkB,QA6BjB,KArCmB,SAAAC,GAAAV,EAAAjC,MAAAC,KAAAC,WAsCfI,CAAWH,EAAK9H,OAClB,MAAOkI,IAITJ,EAAK9H,MAAM+H,eAAe,GAE1BD,EAAK9H,MAAMuK,iBAAiBnC,EAAIY,WAU5CwB,0BAA0B,SAACvG,GACnB,IAAImE,EAAK,GACLqC,EAAY3C,EAAK9H,MAAMyK,UACvBnC,EAAM,GAHiB,SAAAoC,IAAA,OAAAA,EAAAjH,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAlG,EAAAmG,KAc3B,SAAAyF,EAA0B3K,GAA1B,IAAAoF,EAAAC,EAAAuF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAjK,EAAAkK,EAAA,OAAAhG,EAAAlG,EAAA6G,KAAA,SAAAsF,GAAA,cAAAA,EAAApF,KAAAoF,EAAAnF,MAAA,cAAAmF,EAAAnF,KAAA,EAC2BC,EAAM,CACzBC,IAAG,2CAAAC,OAA6C,EAA7C,UAAwDlG,EAAMmG,UAA9D,YAAAD,OAAkFlG,EAAMoG,cAAxF,eAAAF,OAAmHlG,EAAMqG,iBAAzH,WAAAH,OAAmJlG,EAAMsG,MAAzJ,WAAAJ,OAAwKlG,EAAMuG,MAA9K,eAAAL,OAAiMkC,EAAIY,QACxMvC,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,oBAAqB,EACrBC,gBAAiB,sEAP7B,OACUzB,EADV8F,EAAApE,KAWQzB,EAAOD,EAAS2B,KAXxB6D,GAAA,EAAAC,GAAA,EAAAC,OAAA9D,EAAAkE,EAAApF,KAAA,EAAAiF,EAYqB1F,EAZrB4B,OAAAC,YAAA,UAAA0D,GAAAI,EAAAD,EAAAhF,QAAAoB,KAAA,CAAA+D,EAAAnF,KAAA,gBAYchF,EAZdiK,EAAA/G,MAAAiH,EAAApF,KAAA,GAAAoF,EAAAnF,KAAA,GAcmCC,EAAM,CACvBC,IAAG,qCAAAC,OAAuCnF,EAAIC,KAAKC,IAAIC,KAApD,6CACHuF,OAAQ,QAhB1B,QAckBrB,EAdlB8F,EAAApE,KAkBa/F,EAAIE,IAAIC,KAAOkE,EAAS2B,KAAKK,SAAS,GAAGnB,IAlBtDiF,EAAAnF,KAAA,iBAAAmF,EAAApF,KAAA,GAAAoF,EAAA7D,GAAA6D,EAAA,kBAAAN,GAAA,EAAAM,EAAAnF,KAAA,gBAAAmF,EAAAnF,KAAA,iBAAAmF,EAAApF,KAAA,GAAAoF,EAAA5D,GAAA4D,EAAA,SAAAL,GAAA,EAAAC,EAAAI,EAAA5D,GAAA,QAAA4D,EAAApF,KAAA,GAAAoF,EAAApF,KAAA,GAAA8E,GAAA,MAAAG,EAAAxD,QAAAwD,EAAAxD,SAAA,WAAA2D,EAAApF,KAAA,IAAA+E,EAAA,CAAAK,EAAAnF,KAAA,eAAA+E,EAAA,eAAAI,EAAA1D,OAAA,mBAAA0D,EAAA1D,OAAA,YAqBIxH,EAAMyH,SAASpC,GACfrF,EAAMiJ,aAAa7D,EAASsB,QAAQ,4BAtBxC,yBAAAwE,EAAAxD,SAAAiD,EAAA,6CAd2BhD,MAAAC,KAAAC,WAI3B5D,EAAMiF,QAAQ,SAASC,GACnBb,EAAMc,KAAKqB,EAAUpB,KAAK,SAAA8B,GAAI,OAAEA,EAAKzI,OAAOyG,OAEhDb,EAAMY,QAAQ,SAASC,GACnBf,EAAIgB,KAAKD,EAAQI,QA8BjB,KAtCuB,SAAA6B,GAAAV,EAAA/C,MAAAC,KAAAC,WAuCnBI,CAAWH,EAAK9H,OAClB,MAAOkI,IAKbJ,EAAK9H,MAAM+H,eAAe,GAE1BD,EAAK9H,MAAMqL,yBAAoBjD,EAAIY,WAS3CsC,kBAAkB,SAACC,GAAI,SAAAC,IAAA,OAAAA,EAAA/H,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAlG,EAAAmG,KAGf,SAAAuG,EAA0BzL,GAA1B,IAAAoF,EAAAC,EAAAqG,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/K,EAAAgL,EAAA,OAAA9G,EAAAlG,EAAA6G,KAAA,SAAAoG,GAAA,cAAAA,EAAAlG,KAAAkG,EAAAjG,MAAA,cAAAiG,EAAAjG,KAAA,EAC2BC,EAAM,CACzBC,IAAG,2CAAAC,OAA6C,EAA7C,UAAwDlG,EAAMmG,UAA9D,YAAAD,OAAkFlG,EAAMoG,cAAxF,eAAAF,OAAmHlG,EAAMqG,iBAAzH,WAAAH,OAAmJqF,EAAE7J,OAAOuC,MAA5J,WAAAiC,OAA2KlG,EAAMuG,MAAjL,eAAAL,OAAoMlG,EAAMwG,kBAC7MC,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,oBAAqB,EACrBC,gBAAiB,sEAP7B,OACUzB,EADV4G,EAAAlF,KAWQzB,EAAOD,EAAS2B,KAXxB2E,GAAA,EAAAC,GAAA,EAAAC,OAAA5E,EAAAgF,EAAAlG,KAAA,EAAA+F,EAYqBxG,EAZrB4B,OAAAC,YAAA,UAAAwE,GAAAI,EAAAD,EAAA9F,QAAAoB,KAAA,CAAA6E,EAAAjG,KAAA,gBAYchF,EAZd+K,EAAA7H,MAAA+H,EAAAlG,KAAA,GAAAkG,EAAAjG,KAAA,GAcmCC,EAAM,CACvBC,IAAG,qCAAAC,OAAuCnF,EAAIC,KAAKC,IAAIC,KAApD,6CACHuF,OAAQ,QAhB1B,QAckBrB,EAdlB4G,EAAAlF,KAkBa/F,EAAIE,IAAIC,KAAOkE,EAAS2B,KAAKK,SAAS,GAAGnB,IAlBtD+F,EAAAjG,KAAA,iBAAAiG,EAAAlG,KAAA,GAAAkG,EAAA3E,GAAA2E,EAAA,kBAAAN,GAAA,EAAAM,EAAAjG,KAAA,gBAAAiG,EAAAjG,KAAA,iBAAAiG,EAAAlG,KAAA,GAAAkG,EAAA1E,GAAA0E,EAAA,SAAAL,GAAA,EAAAC,EAAAI,EAAA1E,GAAA,QAAA0E,EAAAlG,KAAA,GAAAkG,EAAAlG,KAAA,GAAA4F,GAAA,MAAAG,EAAAtE,QAAAsE,EAAAtE,SAAA,WAAAyE,EAAAlG,KAAA,IAAA6F,EAAA,CAAAK,EAAAjG,KAAA,eAAA6F,EAAA,eAAAI,EAAAxE,OAAA,mBAAAwE,EAAAxE,OAAA,YAqBIxH,EAAMyH,SAASpC,GACfrF,EAAMiJ,aAAa7D,EAASsB,QAAQ,4BAtBxC,yBAAAsF,EAAAtE,SAAA+D,EAAA,6CAHe9D,MAAAC,KAAAC,WACfC,EAAK9H,MAAMiM,SAASV,EAAE7J,OAAOuC,OA0BzB,KA3BW,SAAAiI,GAAAV,EAAA7D,MAAAC,KAAAC,WA4BPI,CAAWH,EAAK9H,OAClB,MAAOkI,IAGbJ,EAAK9H,MAAM+H,eAAe,MAMlCoE,kBAAkB,SAACZ,GAAI,SAAAa,IAAA,OAAAA,EAAA3I,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAlG,EAAAmG,KAGf,SAAAmH,EAA0BrM,GAA1B,IAAAoF,EAAAC,EAAAiH,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3L,EAAA4L,EAAA,OAAA1H,EAAAlG,EAAA6G,KAAA,SAAAgH,GAAA,cAAAA,EAAA9G,KAAA8G,EAAA7G,MAAA,cAAA6G,EAAA7G,KAAA,EAC2BC,EAAM,CACzBC,IAAG,2CAAAC,OAA6C,EAA7C,UAAwDlG,EAAMmG,UAA9D,YAAAD,OAAkFlG,EAAMoG,cAAxF,eAAAF,OAAmHlG,EAAMqG,iBAAzH,WAAAH,OAAmJlG,EAAMsG,MAAzJ,WAAAJ,OAAwKqF,EAAE7J,OAAOuC,MAAjL,eAAAiC,OAAoMlG,EAAMwG,kBAC7MC,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,oBAAqB,EACrBC,gBAAiB,sEAP7B,OACUzB,EADVwH,EAAA9F,KAWQzB,EAAOD,EAAS2B,KAXxBuF,GAAA,EAAAC,GAAA,EAAAC,OAAAxF,EAAA4F,EAAA9G,KAAA,EAAA2G,EAYqBpH,EAZrB4B,OAAAC,YAAA,UAAAoF,GAAAI,EAAAD,EAAA1G,QAAAoB,KAAA,CAAAyF,EAAA7G,KAAA,gBAYchF,EAZd2L,EAAAzI,MAAA2I,EAAA9G,KAAA,GAAA8G,EAAA7G,KAAA,GAcmCC,EAAM,CACvBC,IAAG,qCAAAC,OAAuCnF,EAAIE,IAAIC,KAA/C,6CACHuF,OAAQ,QAhB1B,QAckBrB,EAdlBwH,EAAA9F,KAkBa/F,EAAIE,IAAIC,KAAOkE,EAAS2B,KAAKK,SAAS,GAAGnB,IAlBtD2G,EAAA7G,KAAA,iBAAA6G,EAAA9G,KAAA,GAAA8G,EAAAvF,GAAAuF,EAAA,kBAAAN,GAAA,EAAAM,EAAA7G,KAAA,gBAAA6G,EAAA7G,KAAA,iBAAA6G,EAAA9G,KAAA,GAAA8G,EAAAtF,GAAAsF,EAAA,SAAAL,GAAA,EAAAC,EAAAI,EAAAtF,GAAA,QAAAsF,EAAA9G,KAAA,GAAA8G,EAAA9G,KAAA,GAAAwG,GAAA,MAAAG,EAAAlF,QAAAkF,EAAAlF,SAAA,WAAAqF,EAAA9G,KAAA,IAAAyG,EAAA,CAAAK,EAAA7G,KAAA,eAAAyG,EAAA,eAAAI,EAAApF,OAAA,mBAAAoF,EAAApF,OAAA,YAqBIxH,EAAMyH,SAASpC,GACfrF,EAAMiJ,aAAa7D,EAASsB,QAAQ,4BAtBxC,yBAAAkG,EAAAlF,SAAA2E,EAAA,6CAHe1E,MAAAC,KAAAC,WACfC,EAAK9H,MAAM6M,SAAStB,EAAE7J,OAAOuC,OA0BzB,KA3BW,SAAA6I,GAAAV,EAAAzE,MAAAC,KAAAC,WA4BPI,CAAWH,EAAK9H,OAClB,MAAOkI,IAIbJ,EAAK9H,MAAM+H,eAAe,0FA/V9BH,KAAK5H,MAAMuK,iBAAiB,IAC5B3C,KAAK5H,MAAMyJ,oBAAoB,IAC/B7B,KAAK5H,MAAMqL,yBAAoB,IAC/BzD,KAAK5H,MAAMiM,SAAS,IACpBrE,KAAK5H,MAAM6M,SAAS,IACpBjF,KAAK5H,MAAM+H,eAAe,GAC1BH,KAAK5H,MAAMyH,SAAS,IACpBG,KAAK5H,MAAMiJ,aAAa,mMAIDjD,EAAM,CACzBC,IAAG,2CAAAC,OAA6C0B,KAAK5H,MAAM+M,YAAxD,WAAA7G,OAA6E0B,KAAK5H,MAAMmG,UAAxF,YAAAD,OAA4G0B,KAAK5H,MAAMoG,cAAvH,eAAAF,OAAkJ0B,KAAK5H,MAAMqG,iBAA7J,WAAAH,OAAuL0B,KAAK5H,MAAMsG,MAAlM,WAAAJ,OAAiN0B,KAAK5H,MAAMuG,MAA5N,eAAAL,OAA+O0B,KAAK5H,MAAMwG,kBAC7PC,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,oBAAqB,EACrBC,gBAAiB,6EANnBzB,SAUFC,EAAOD,EAAS2B,mCACH1B,2EAAPtE,8BAEqBiF,EAAM,CACvBC,IAAG,qCAAAC,OAAuCnF,EAAIE,IAAIC,KAA/C,6CACHuF,OAAQ,gBAFRrB,SAILrE,EAAIE,IAAIC,KAAOkE,EAAS2B,KAAKK,SAAS,GAAGnB,2UAGlD2B,KAAK5H,MAAMyH,SAASpC,GACpBuC,KAAK5H,MAAMiJ,aAAa7D,EAASsB,QAAQ,sCAGhBV,EAAO,CAC5BC,IAAG,oCACHQ,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,oBAAqB,EACrBC,gBAAiB,qFANf8C,SASV/B,KAAK5H,MAAMgN,UAAUrD,EAAO5C,gBAEAf,EAAO,CAC/BC,IAAG,uCACHQ,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,oBAAqB,EACrBC,gBAAiB,qFANfwB,SAUVT,KAAK5H,MAAMiN,aAAa5E,EAAUtB,gBAGNf,EAAM,CAC9BC,IAAG,uCACHQ,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,oBAAqB,EACrBC,gBAAiB,8EANf4D,SAUV7C,KAAK5H,MAAMkN,aAAazC,EAAU1D,6KA+R9B,IAAAoG,EACuCvF,KAAK5H,MAAzC2J,EADHwD,EACGxD,OAAOtB,EADV8E,EACU9E,UAAUlI,EADpBgN,EACoBhN,MAAMsK,EAD1B0C,EAC0B1C,UAC9B,OACI3L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAW,UAAf,YACAH,EAAAC,EAAAC,cAAA,+CACKF,EAAAC,EAAAC,cAAA,SAAOoO,KAAK,OAAOlJ,SAAU0D,KAAK0D,qBAEvCxM,EAAAC,EAAAC,cAAA,sDACKF,EAAAC,EAAAC,cAAA,SAAOoO,KAAK,OAAOlJ,SAAU0D,KAAKuE,qBAEvCrN,EAAAC,EAAAC,cAACiE,EAAD,CAAQE,MAAOkF,EAAW7G,MAAM,WAAW0C,SAAU0D,KAAKO,uBAC1DrJ,EAAAC,EAAAC,cAACiE,EAAD,CAAQE,MAAOwG,EAASnI,MAAM,SAAS0C,SAAU0D,KAAK8B,wBACtD5K,EAAAC,EAAAC,cAACiE,EAAD,CAAQE,MAAOsH,EAAYjJ,MAAM,YAAY0C,SAAU0D,KAAK4C,4BAC5D1L,EAAAC,EAAAC,cAAC2P,EAAD,CAAOxO,MAAOA,EAAOE,KAAOuH,KAAK5H,MAAM+M,YAAazM,MAAQsH,KAAK5H,MAAMmG,YACvErH,EAAAC,EAAAC,cAACqO,EAAAtO,EAAD,CACIgO,YAAanF,KAAK5H,MAAM+M,YACxBO,WAAY1F,KAAK5H,MAAMuN,UACvBC,kBAAmB5F,KAAK/C,cACxBtF,MAAM,0BA3XAkO,aCQhBC,EAAW,CAGTvN,MAAO,GACPwJ,OAAQ,GACRtB,UAAW,GACXlC,UAAW,GACXoH,UAAW,EACXR,YAAa,EACb3G,cAAe,GACfC,iBAAkB,GAClBG,iBAAkB,GAClBiE,UAAU,GACVnE,MAAO,GACPC,MAAO,IAyEAqI,EArEQ,WAA6B,IAA5BhB,EAA4B/F,UAAA1G,OAAA,QAAA6F,IAAAa,UAAA,GAAAA,UAAA,GAApB6F,EAAWG,EAAShG,UAAA1G,OAAA,EAAA0G,UAAA,QAAAb,EAGhD,OAAQ6G,EAAOT,MACX,IAtCW,cAuCP,OAAO3J,OAAAqK,EAAA,EAAArK,CAAA,GAAImK,EAAX,CACGzN,MAAO0N,EAAO1N,QAErB,IAzCY,eA0CR,OAAOsD,OAAAqK,EAAA,EAAArK,CAAA,GAAImK,EAAX,CACKjE,OAAQkE,EAAOlE,SAExB,IA5Ce,kBA6CX,OAAOlG,OAAAqK,EAAA,EAAArK,CAAA,GAAImK,EAAX,CACIvF,UAAWwF,EAAOxF,YAE1B,IA/CiB,qBAgDb,OAAO5E,OAAAqK,EAAA,EAAArK,CAAA,GAAImK,EAAX,CACIb,YAAac,EAAOd,cAE5B,IAlDmB,uBAmDf,OAAOtJ,OAAAqK,EAAA,EAAArK,CAAA,GAAImK,EAAX,CACIxH,cAAeyH,EAAOzH,gBAE9B,IArDsB,0BAsDlB,OAAO3C,OAAAqK,EAAA,EAAArK,CAAA,GAAImK,EAAX,CACKvH,iBAAkBwH,EAAOxH,mBAElC,IAxDe,mBAyDX,OAAO5C,OAAAqK,EAAA,EAAArK,CAAA,GAAImK,EAAX,CACKL,UAAWM,EAAON,YAE3B,IA3DU,cA4DN,OAAO9J,OAAAqK,EAAA,EAAArK,CAAA,GAAImK,EAAX,CACItH,MAAOuH,EAAOvH,QAEtB,IA9DU,cA+DN,OAAO7C,OAAAqK,EAAA,EAAArK,CAAA,GAAImK,EAAX,CACIrH,MAAOsH,EAAOtH,QAEtB,IAjEc,kBAkEV,OAAO9C,OAAAqK,EAAA,EAAArK,CAAA,GAAImK,EAAX,CACInD,UAAWoD,EAAOpD,YAE1B,IApEsB,0BAqElB,OAAOhH,OAAAqK,EAAA,EAAArK,CAAA,GAAImK,EAAX,CACKpH,iBAAkBqH,EAAOrH,mBAIlC,QACG,OAAOoH,ICfHG,cAhEO,SAACH,GAAS,IACtBiB,EAAWjB,EAAXiB,QACN,MAAM,CACF1O,MAAO0O,EAAQ1O,MACfwJ,OAAQkF,EAAQlF,OAChBtB,UAAWwG,EAAQxG,UACnBkF,UAAWsB,EAAQtB,UACnBpH,UAAW0I,EAAQ1I,UACnB4G,YAAa8B,EAAQ9B,YACrB3G,cAAeyI,EAAQzI,cACvBC,iBAAkBwI,EAAQxI,iBAE1BoE,UAAUoE,EAAQpE,UAClBjE,iBAAkBqI,EAAQrI,iBAC1BF,MAAOuI,EAAQvI,MACfC,MAAOsI,EAAQtI,QAIE,SAAC0H,GACtB,MAAM,CACFxG,SAAU,SAACtH,GACR8N,ED+DiB,SAAC9N,GAAD,MAAY,CAACiN,KA3FtB,cA2FyCjN,SC/DxC2O,CAAa3O,KAEzB6M,UAAW,SAACrD,GACTsE,ED6DkB,SAACtE,GAAD,MAAa,CAACyD,KA3FvB,eA2F2CzD,UC7D3CoF,CAAcpF,KAE1BsD,aAAc,SAAC5E,GACZ4F,ED2DqB,SAAC5F,GAAD,MAAgB,CAAC+E,KA3F1B,kBA2FiD/E,aC3DpD2G,CAAiB3G,KAE7BN,eAAe,SAAC1H,GACZ4N,EDyDwC,CAACb,KA3F5B,qBA2FsDL,YCzDvC1M,KAEhCoJ,oBAAoB,SAACpB,GACjB4F,EDuDkD,CAACb,KA1FjC,0BA0FgE/G,iBCvDjDgC,KAErCkC,iBAAiB,SAACZ,GACdsE,EDqD4C,CAACb,KA5F9B,uBA4F0DhH,cCrD3CuD,KAElCV,aAAa,SAACsE,GACVU,EDmDoB,SAACV,GAAD,MAAgB,CAACH,KA3F1B,mBA2FkDG,aCnDpD0B,CAAiB1B,KAI9BtB,SAAS,SAAC3F,GACN2H,ED+CgB,SAAC3H,GAAD,MAAY,CAAC8G,KA3FvB,cA2F0C9G,SC/CvC4I,CAAa5I,KAE1BuG,SAAS,SAACtG,GACN0H,ED6CgB,SAAC1H,GAAD,MAAY,CAAC6G,KA3FvB,cA2F0C7G,SC7CvC4I,CAAa5I,KAK1B2G,aAAa,SAACzC,GACVwD,EDwCoB,SAACxD,GAAD,MAAgB,CAAC2C,KA3F3B,kBA2FkD3C,aCxCnD2E,CAAiB3E,KAE9BY,2BAAoB,SAAC7E,GACjByH,EDsC2B,SAACzH,GAAD,MAAuB,CAAC4G,KA3FjC,0BA2FgE5G,oBCtCzE6I,CAAwB7I,OAO9BuH,CAA6CW,GC5C7CY,OAlBf,WACE,OACExQ,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACAL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAACuQ,EAAD,MAEAzQ,EAAAC,EAAAC,cAACwQ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYpO,UAAWqO,IACzC7Q,EAAAC,EAAAC,cAACwQ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIpO,UAAWqO,IACjC7Q,EAAAC,EAAAC,cAACwQ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWpO,UAAWsO,OCLvCC,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBhD,QACf0C,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,UAO5BU,MAAM,SAAAlJ,GACL8I,QAAQ9I,MAAM,4CAA6CA,kBCrF3DmJ,GAAQC,aAAYC,aAAgB,CAAC1C,QAASD,EAAgBZ,SAAUL,IAAmBoC,OAAOyB,8BAAgCzB,OAAOyB,gCAE/IC,IAASC,OAAO5S,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAUN,MAAOA,IAAOvS,EAAAC,EAAAC,cAAC4S,GAAD,OAAoBC,SAASC,eAAe,SDS7E,SAAkBzB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIyB,IAAIC,0BAAwBjC,OAAOC,SAAS9Q,MACpD+S,SAAWlC,OAAOC,SAASiC,OAIvC,OAGFlC,OAAOmC,iBAAiB,OAAQ,WAC9B,IAAM9B,EAAK,GAAAlK,OAAM8L,0BAAN,sBAEPnC,IAgEV,SAAiCO,EAAOC,GAEtC8B,MAAM/B,GACHK,KAAK,SAAArL,GAEJ,IAAMgN,EAAchN,EAASsB,QAAQ2L,IAAI,gBAEnB,MAApBjN,EAASkN,QACO,MAAfF,IAA8D,IAAvCA,EAAYvP,QAAQ,cAG5CyN,UAAUC,cAAcgC,MAAM9B,KAAK,SAAAC,GACjCA,EAAa8B,aAAa/B,KAAK,WAC7BV,OAAOC,SAASyC,aAKpBtC,GAAgBC,EAAOC,KAG1Be,MAAM,WACLJ,QAAQC,IACN,mEArFAyB,CAAwBtC,EAAOC,GAI/BC,UAAUC,cAAcgC,MAAM9B,KAAK,WACjCO,QAAQC,IACN,gHAMJd,GAAgBC,EAAOC,MCnC/BE","file":"static/js/main.6341ad28.chunk.js","sourcesContent":["import React from 'react' \r\nimport { Link, withRouter} from 'react-router-dom'\r\n\r\nfunction  Navbar(){\r\n\r\n    return( \r\n        <nav className=\"nav-wrapper grey darken-3\"> \r\n            <div className=\"container\"> \r\n            <a className=\"brand-logo\" href='/trending'>Show List</a> \r\n                <ul className=\"right\"> \r\n                   \r\n                    <li><Link to=\"/trending\" >Trending</Link></li> \r\n                    <li><Link to=\"/popular\" >Popular</Link></li> \r\n                 \r\n                  \r\n                </ul> \r\n            </div> \r\n        </nav> \r\n) \r\n} \r\nexport default  withRouter(Navbar)\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nexport default function SimpleTable(props){\r\n\r\n\r\nconst classes = useStyles();\r\n\r\nlet rows= props.shows;\r\nlet number = (props.page-1)*props.limit; \r\n\r\n\r\n\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>№</TableCell>\r\n            <TableCell>Title</TableCell>\r\n            <TableCell align=\"right\">Year</TableCell>\r\n            <TableCell align=\"right\">Trakt</TableCell>\r\n            <TableCell align=\"right\">Poster URL or TVDB id</TableCell>\r\n            </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map(row => ( // eslint-disable-next-line\r\n                number++, \r\n    \r\n                row.show.ids.tvdb.length>8 ? \r\n                  (<TableRow key={row.show.ids.trakt}>\r\n                  <TableCell align=\"right\">{number}</TableCell>\r\n                  <TableCell component=\"th\" scope=\"row\">{row.show.title}</TableCell>\r\n                  <TableCell align=\"right\">{row.show.year}</TableCell>\r\n                  <TableCell align=\"right\">{row.show.ids.trakt}</TableCell>\r\n                  <TableCell align=\"right\">  <a href={row.show.ids.tvdb} target=\"_blank\" rel=\"noopener noreferrer\"> {\" \"}{row.show.ids.tvdb}</a> </TableCell>\r\n                  </TableRow>\r\n                  ) \r\n               :  \r\n                  (<TableRow key={row.show.ids.trakt}>\r\n                  <TableCell align=\"right\">{number}</TableCell>\r\n                  <TableCell component=\"th\" scope=\"row\">{row.show.title}</TableCell>\r\n                  <TableCell align=\"right\">{row.show.year}</TableCell>\r\n                  <TableCell align=\"right\">{row.show.ids.trakt}</TableCell>\r\n                  <TableCell align=\"right\">  {row.show.ids.tvdb}    </TableCell>\r\n                  </TableRow>\r\n                  )\r\n              ))}\r\n            </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n // \r\n\r\n\r\n","import React from 'react';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n  },\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\n\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function MultipleSelect(props) {\r\n    const names = props.items;\r\n   \r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [personName, setPersonName] = React.useState([]);\r\n  \r\n    function handleChange(event) {\r\n      setPersonName(event.target.value);\r\n      props.onChange(event.target.value);\r\n    }\r\n  \r\n    \r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n       \r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"select-multiple-chip\">{props.title}</InputLabel>\r\n          <Select\r\n            multiple\r\n            value={personName}\r\n            onChange={handleChange}\r\n            input={<Input id=\"select-multiple-chip\" />}\r\n            renderValue={selected => (\r\n              <div className={classes.chips}>\r\n                {selected.map(value => (\r\n                  <Chip key={value} label={value} className={classes.chip} />\r\n                ))}\r\n              </div>\r\n            )}\r\n            MenuProps={MenuProps}\r\n          >\r\n            {names.map(name => (\r\n              <MenuItem key={name.name} value={name.name} style={getStyles(name.name, personName, theme)}>\r\n                {name.name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n    \r\n\r\n        \r\n       \r\n      </div>\r\n    );\r\n  }","import React from 'react' \r\nimport {Component} from 'react'\r\nimport * as axios from 'axios'\r\nimport Table from '../presentational/TableT'\r\nimport Pagination from \"react-pagination-library\";\r\nimport \"react-pagination-library/build/css/index.css\"; \r\nimport Select from '../presentational/Select';\r\n\r\n\r\nclass Trending extends Component{ \r\n    \r\ncomponentWillUnmount(){\r\n    this.props.setCurrentGenres('');\r\n    this.props.setCurrentLanguages('');\r\n    this.props.setСurrentCountries('');\r\n    this.props.setQuery('');\r\n    this.props.setYears('');\r\n    this.props.setCurrentPage(1);\r\n    this.props.setShows([]);   \r\n    this.props.setPageCount(0);   \r\n}\r\nasync componentDidMount(){\r\n    const response = await axios({\r\n        url: `https://api.trakt.tv/shows/trending?page=${this.props.currentPage}&limit=${this.props.pageLimit}&genres=${this.props.currentGenres}&languages=${this.props.currentLanguages}&query=${this.props.query}&years=${this.props.years}&countries=${this.props.currentCountries}`,\r\n        method: 'get',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'trakt-api-version': 2,\r\n            'trakt-api-key': 'b817c26b5af6ff935a62c16c85628068da1be7bd67d3f05dbcc8b25c872df20b'\r\n        }\r\n     })\r\n     \r\n    let imgs = response.data ;\r\n    for(const row of imgs){\r\n        try {\r\n            const response = await axios({\r\n                  url: `http://webservice.fanart.tv/v3/tv/${row.show.ids.tvdb}?api_key=1296f15c399158e5046966fa404c88ff`,\r\n                  method: 'get',   \r\n            });\r\n             row.show.ids.tvdb = response.data.tvposter[0].url;\r\n            } catch (error) {}\r\n        };\r\n    this.props.setShows(imgs);\r\n    this.props.setPageCount(response.headers['x-pagination-page-count']);\r\n     \r\n\r\n        const genres = await axios ({\r\n        url: `https://api.trakt.tv/genres/shows`, // get all genres for shows from API\r\n        method: 'get',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'trakt-api-version': 2,\r\n            'trakt-api-key': 'b817c26b5af6ff935a62c16c85628068da1be7bd67d3f05dbcc8b25c872df20b'\r\n        }\r\n     })\r\n    this.props.setGenres(genres.data); \r\n\r\n        const languages = await axios ({\r\n        url: `https://api.trakt.tv/languages/shows`, // get all languages for shows from API\r\n        method: 'get',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'trakt-api-version': 2,\r\n            'trakt-api-key': 'b817c26b5af6ff935a62c16c85628068da1be7bd67d3f05dbcc8b25c872df20b'\r\n        }\r\n     })\r\n     \r\n    this.props.setLanguages(languages.data);\r\n     \r\n\r\n        const countries = await axios({\r\n        url: `https://api.trakt.tv/countries/shows`, // get all countries for shows from API\r\n        method: 'get',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'trakt-api-version': 2,\r\n            'trakt-api-key': 'b817c26b5af6ff935a62c16c85628068da1be7bd67d3f05dbcc8b25c872df20b'\r\n        }\r\n     })\r\n     \r\n    this.props.setCountries(countries.data);\r\n    \r\n     \r\n    }\r\n\r\nonPageChanged=(pageNumber)=>{\r\n        \r\n        this.props.setCurrentPage(pageNumber);\r\n        \r\n        async function pageChange(props){\r\n        const response = await axios({\r\n            url: `https://api.trakt.tv/shows/trending?page=${pageNumber}&limit=${props.pageLimit}&genres=${props.currentGenres}&languages=${props.currentLanguages}&query=${props.query}&years=${props.years}&countries=${props.currentCountries}`,\r\n            method: 'get',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'trakt-api-version': 2,\r\n                'trakt-api-key': 'b817c26b5af6ff935a62c16c85628068da1be7bd67d3f05dbcc8b25c872df20b'\r\n            }\r\n         })\r\n         \r\n        let imgs = response.data ;\r\n        for(const row of imgs){\r\n            try {\r\n                const response = await axios({\r\n                      url: `http://webservice.fanart.tv/v3/tv/${row.show.ids.tvdb}?api_key=1296f15c399158e5046966fa404c88ff`,\r\n                      method: 'get',   \r\n                });\r\n                 row.show.ids.tvdb = response.data.tvposter[0].url;\r\n                } catch (error) {}\r\n            };\r\n        props.setShows(imgs);\r\n        }\r\n\r\n        try {\r\n            pageChange(this.props);\r\n        } catch (error) {  \r\n        }\r\n        \r\n\r\n    }\r\n\r\n\r\n\r\nonLangComboboxChange=(value)=>{\r\n        let res =[];\r\n        let languages = this.props.languages;\r\n        let myres=[]; \r\n        value.forEach(function(element) {\r\n            myres.push(languages.find(lang=>lang.name===element));\r\n        });\r\n        myres.forEach(function(element) {\r\n            res.push(element.code);\r\n        });\r\n\r\n        \r\n\r\n        async function pageChange(props){\r\n            const response = await axios({\r\n                url: `https://api.trakt.tv/shows/trending?page=${1}&limit=${props.pageLimit}&genres=${props.currentGenres}&languages=${res.join()}&query=${props.query}&years=${props.years}&countries=${props.currentCountries}`,\r\n                method: 'get',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'trakt-api-version': 2,\r\n                    'trakt-api-key': 'b817c26b5af6ff935a62c16c85628068da1be7bd67d3f05dbcc8b25c872df20b'\r\n                }\r\n             })\r\n             \r\n            let imgs = response.data ;\r\n            for(const row of imgs){\r\n                try {\r\n                    const response = await axios({\r\n                          url: `http://webservice.fanart.tv/v3/tv/${row.show.ids.tvdb}?api_key=1296f15c399158e5046966fa404c88ff`,\r\n                          method: 'get',   \r\n                    });\r\n                     row.show.ids.tvdb = response.data.tvposter[0].url;\r\n                    } catch (error) {}\r\n                };\r\n            props.setShows(imgs);\r\n            props.setPageCount(response.headers['x-pagination-page-count']);\r\n            }\r\n            try {\r\n                pageChange(this.props);\r\n            } catch (error) {  \r\n            }\r\n            \r\n\r\n\r\n\r\n            this.props.setCurrentPage(1);\r\n\r\n            this.props.setCurrentLanguages(res.join());\r\n            \r\n    \r\n\r\n      \r\n        \r\n\r\n\r\n    }\r\n\r\nonGenreComboboxChange=(value)=>{\r\n        let res =[];\r\n        let genres = this.props.genres;\r\n        let myres=[]; \r\n        value.forEach(function(element) {\r\n            myres.push(genres.find(lang=>lang.name===element));\r\n        });\r\n        myres.forEach(function(element) {\r\n            res.push(element.slug);\r\n        });\r\n\r\n        \r\n\r\n        async function pageChange(props){\r\n            const response = await axios({\r\n                url: `https://api.trakt.tv/shows/trending?page=${1}&limit=${props.pageLimit}&genres=${res.join()}&languages=${props.currentLanguages}&query=${props.query}&years=${props.years}&countries=${props.currentCountries}`,\r\n                method: 'get',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'trakt-api-version': 2,\r\n                    'trakt-api-key': 'b817c26b5af6ff935a62c16c85628068da1be7bd67d3f05dbcc8b25c872df20b'\r\n                }\r\n             })\r\n             \r\n            let imgs = response.data ;\r\n            for(const row of imgs){\r\n                try {\r\n                    const response = await axios({\r\n                          url: `http://webservice.fanart.tv/v3/tv/${row.show.ids.tvdb}?api_key=1296f15c399158e5046966fa404c88ff`,\r\n                          method: 'get',   \r\n                    });\r\n                     row.show.ids.tvdb = response.data.tvposter[0].url;\r\n                    } catch (error) {}\r\n                };\r\n            props.setShows(imgs);\r\n            props.setPageCount(response.headers['x-pagination-page-count']);\r\n            }\r\n            try {\r\n                pageChange(this.props);\r\n            } catch (error) {  \r\n            }\r\n            \r\n\r\n            this.props.setCurrentPage(1);\r\n\r\n            this.props.setCurrentGenres(res.join());\r\n         \r\n    \r\n\r\n\r\n        \r\n        \r\n         \r\n    }\r\n \r\nonCountriesComboboxChange=(value)=>{\r\n        let res =[];\r\n        let countries = this.props.countries;\r\n        let myres=[]; \r\n        value.forEach(function(element) {\r\n            myres.push(countries.find(coun=>coun.name===element));\r\n        });\r\n        myres.forEach(function(element) {\r\n            res.push(element.code);\r\n        });\r\n\r\n\r\n\r\n\r\n        async function pageChange(props){\r\n            const response = await axios({\r\n                url: `https://api.trakt.tv/shows/trending?page=${1}&limit=${props.pageLimit}&genres=${props.currentGenres}&languages=${props.currentLanguages}&query=${props.query}&years=${props.years}&countries=${res.join()}`,\r\n                method: 'get',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'trakt-api-version': 2,\r\n                    'trakt-api-key': 'b817c26b5af6ff935a62c16c85628068da1be7bd67d3f05dbcc8b25c872df20b'\r\n                }\r\n             })\r\n             \r\n            let imgs = response.data ;\r\n            for(const row of imgs){\r\n                try {\r\n                    const response = await axios({\r\n                          url: `http://webservice.fanart.tv/v3/tv/${row.show.ids.tvdb}?api_key=1296f15c399158e5046966fa404c88ff`,\r\n                          method: 'get',   \r\n                    });\r\n                     row.show.ids.tvdb = response.data.tvposter[0].url;\r\n                    } catch (error) {}\r\n                };\r\n            props.setShows(imgs);\r\n            props.setPageCount(response.headers['x-pagination-page-count']);\r\n            }\r\n            try {\r\n                pageChange(this.props);\r\n            } catch (error) {  \r\n            }\r\n            \r\n\r\n\r\n        this.props.setCurrentPage(1);\r\n\r\n        this.props.setСurrentCountries(res.join());\r\n        \r\n        \r\n          \r\n\r\n\r\n    }\r\n    \r\n\r\nhandleChangeQuery=(e)=>{\r\n        this.props.setQuery(e.target.value);\r\n\r\n        async function pageChange(props){\r\n            const response = await axios({\r\n                url: `https://api.trakt.tv/shows/trending?page=${1}&limit=${props.pageLimit}&genres=${props.currentGenres}&languages=${props.currentLanguages}&query=${e.target.value}&years=${props.years}&countries=${props.currentCountries}`,\r\n                method: 'get',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'trakt-api-version': 2,\r\n                    'trakt-api-key': 'b817c26b5af6ff935a62c16c85628068da1be7bd67d3f05dbcc8b25c872df20b'\r\n                }\r\n             })\r\n             \r\n            let imgs = response.data ;\r\n            for(const row of imgs){\r\n                try {\r\n                    const response = await axios({\r\n                          url: `http://webservice.fanart.tv/v3/tv/${row.show.ids.tvdb}?api_key=1296f15c399158e5046966fa404c88ff`,\r\n                          method: 'get',   \r\n                    });\r\n                     row.show.ids.tvdb = response.data.tvposter[0].url;\r\n                    } catch (error) {}\r\n                };\r\n            props.setShows(imgs);\r\n            props.setPageCount(response.headers['x-pagination-page-count']);\r\n            }\r\n            try {\r\n                pageChange(this.props);\r\n            } catch (error) {  \r\n            }\r\n            \r\n        this.props.setCurrentPage(1);\r\n\r\n\r\n\r\n    }\r\n\r\nhandleChangeYears=(e)=>{\r\n        this.props.setYears(e.target.value);\r\n\r\n        async function pageChange(props){\r\n            const response = await axios({\r\n                url: `https://api.trakt.tv/shows/trending?page=${1}&limit=${props.pageLimit}&genres=${props.currentGenres}&languages=${props.currentLanguages}&query=${props.query}&years=${e.target.value}&countries=${props.currentCountries}`,\r\n                method: 'get',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'trakt-api-version': 2,\r\n                    'trakt-api-key': 'b817c26b5af6ff935a62c16c85628068da1be7bd67d3f05dbcc8b25c872df20b'\r\n                }\r\n             })\r\n             \r\n            let imgs = response.data ;\r\n            for(const row of imgs){\r\n                try {\r\n                    const response = await axios({\r\n                          url: `http://webservice.fanart.tv/v3/tv/${row.show.ids.tvdb}?api_key=1296f15c399158e5046966fa404c88ff`,\r\n                          method: 'get',   \r\n                    });\r\n                     row.show.ids.tvdb = response.data.tvposter[0].url;\r\n                    } catch (error) {}\r\n                };\r\n            props.setShows(imgs);\r\n            props.setPageCount(response.headers['x-pagination-page-count']);\r\n            }\r\n            try {\r\n                pageChange(this.props);\r\n            } catch (error) {  \r\n            }\r\n\r\n\r\n        this.props.setCurrentPage(1);\r\n\r\n\r\n    }\r\n\r\nrender(){\r\n    const{ genres,languages,shows,countries} = this.props;\r\n    return( \r\n        <div className=\"container\"> \r\n            <h4 className =\"center\"> Trending</h4>\r\n            <label > Search titles and descriptions\r\n                 <input type=\"text\" onChange={this.handleChangeQuery}/>\r\n            </label>\r\n            <label > Search 4 digit year or range of years\r\n                 <input type=\"text\" onChange={this.handleChangeYears}/>\r\n            </label>\r\n            <Select items={languages} title=\"Language\" onChange={this.onLangComboboxChange}  />\r\n            <Select items={genres}  title=\"Genres\" onChange={this.onGenreComboboxChange} />\r\n            <Select items={countries}  title=\"Countries\" onChange={this.onCountriesComboboxChange} />\r\n            <Table shows={shows} page ={this.props.currentPage} limit ={this.props.pageLimit}/>\r\n            <Pagination\r\n                currentPage={this.props.currentPage}\r\n                totalPages={this.props.pageCount}\r\n                changeCurrentPage={this.onPageChanged}\r\n                theme=\"bottom-border\"\r\n                />\r\n            \r\n           \r\n        </div> \r\n    ) \r\n    }\r\n}\r\n\r\nexport default Trending;","const SET_SHOWS_T= 'SET_SHOWS_T'\r\nconst SET_GENRES_T= 'SET_GENRES_T'\r\nconst SET_LANGUAGES_T= 'SET_LANGUAGES_T'\r\nconst SET_CURRENT_PAGE_T='SET_CURRENT_PAGE_T'\r\nconst SET_CURRENT_GENRES_T='SET_CURRENT_GENRES_T'\r\nconst SET_CURRENT_LANGUAGES_T='SET_CURRENT_LANGUAGES_T'\r\nconst SET_PAGE_COUNT_T='SET_PAGE_COUNT_T'\r\nconst SET_QUERY_T='SET_QUERY_T'\r\nconst SET_YEARS_T='SET_YEARS_T'\r\nconst SET_COUNTRIES_T='SET_COUNTRIES_T'\r\nconst SET_CURRENT_COUNTRIES_T='SET_CURRENT_COUNTRIES_T'\r\n\r\n\r\n\r\nconst initState ={\r\n    \r\n        shows: [],\r\n        genres: [],\r\n        languages: [],\r\n        pageLimit: 10,\r\n        pageCount: 0,\r\n        currentPage: 1,\r\n        currentGenres: '',\r\n        currentLanguages: '',\r\n        currentCountries: '',\r\n        countries:[],\r\n        query: '',\r\n        years: '',\r\n    \r\n   \r\n}\r\n\r\n\r\nconst trendingReducer = (state = initState, action)=>{\r\n\r\n\r\n    switch( action.type){\r\n        case SET_SHOWS_T:{\r\n            return {...state,\r\n                shows: action.shows}\r\n        }\r\n        case SET_GENRES_T:{\r\n            return {...state,\r\n                genres: action.genres}\r\n        }\r\n        case SET_LANGUAGES_T:{\r\n            return {...state,\r\n                languages: action.languages}\r\n        }\r\n        case SET_CURRENT_PAGE_T:{\r\n            return {...state, \r\n               currentPage: action.currentPage }\r\n        }\r\n        case SET_CURRENT_GENRES_T:{\r\n            return {...state,\r\n                 currentGenres: action.currentGenres }\r\n        }\r\n        case SET_CURRENT_LANGUAGES_T:{\r\n            return {...state,\r\n                 currentLanguages: action.currentLanguages }\r\n        }\r\n        case SET_PAGE_COUNT_T:{\r\n            return {...state,\r\n                 pageCount: action.pageCount }\r\n        }\r\n        case SET_QUERY_T:{\r\n            return {...state,\r\n                 query: action.query }\r\n        }\r\n        case SET_YEARS_T:{\r\n            return {...state,\r\n                 years: action.years }\r\n        }\r\n        case SET_COUNTRIES_T:{\r\n            return {...state,\r\n                countries: action.countries }\r\n        }\r\n        case SET_CURRENT_COUNTRIES_T:{\r\n            return {...state,\r\n                currentCountries: action.currentCountries }\r\n        }\r\n        default:\r\n           return state;\r\n       }\r\n    \r\n}\r\nexport const setShowsAC_T = (shows) => ({type: SET_SHOWS_T, shows})\r\nexport const setGenresAC_T = (genres) => ({type: SET_GENRES_T, genres})\r\nexport const setLanguagesAC_T = (languages) => ({type: SET_LANGUAGES_T, languages})\r\nexport const setCurrentPageAC_T = (currentPage) => ({type: SET_CURRENT_PAGE_T, currentPage})\r\nexport const setCurrentLanguagesAC_T = (currentLanguages) => ({type: SET_CURRENT_LANGUAGES_T, currentLanguages})\r\nexport const setCurrentGenresAC_T = (currentGenres) => ({type: SET_CURRENT_GENRES_T, currentGenres})\r\nexport const setPageCountAC_T = (pageCount) => ({type: SET_PAGE_COUNT_T, pageCount})\r\nexport const setQueryAC_T = (query) => ({type: SET_QUERY_T, query})\r\nexport const setYearsAC_T = (years) => ({type: SET_YEARS_T, years})\r\nexport const setCountriesAC_T = (countries) => ({type: SET_COUNTRIES_T, countries})\r\nexport const setСurrentCountriesAC_T = (currentCountries) => ({type: SET_CURRENT_COUNTRIES_T, currentCountries})\r\n\r\nexport default trendingReducer","\r\nimport {connect} from \"react-redux\"\r\nimport Trending from './Trending'\r\nimport { setShowsAC_T,setGenresAC_T,setLanguagesAC_T,setCurrentPageAC_T,setCurrentLanguagesAC_T, setCurrentGenresAC_T, setPageCountAC_T, setQueryAC_T ,setYearsAC_T, setCountriesAC_T, setСurrentCountriesAC_T} from '../../reducers/trending';\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n   let  {trending} = state;\r\n    return{\r\n            shows: trending.shows,\r\n            genres: trending.genres,\r\n            languages: trending.languages,\r\n            pageCount: trending.pageCount,\r\n            pageLimit: trending.pageLimit,\r\n            currentPage: trending.currentPage,\r\n            currentGenres: trending.currentGenres,\r\n            currentLanguages: trending.currentLanguages,\r\n            countries:trending.countries,\r\n            currentCountries: trending.currentCountries,\r\n            query: trending.query,\r\n            years: trending.years,\r\n        \r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        setShows: (shows)=>{\r\n           dispatch(setShowsAC_T(shows));\r\n        },\r\n        setGenres: (genres)=>{\r\n           dispatch(setGenresAC_T(genres));\r\n        },\r\n        setLanguages: (languages)=>{\r\n           dispatch(setLanguagesAC_T(languages));\r\n        },\r\n        setCurrentPage:(page)=>{\r\n            dispatch(setCurrentPageAC_T(page));\r\n        },\r\n        setCurrentLanguages:(languages)=>{\r\n            dispatch(setCurrentLanguagesAC_T(languages));\r\n        },\r\n        setCurrentGenres:(genres)=>{\r\n            dispatch(setCurrentGenresAC_T(genres));\r\n        },\r\n        setPageCount:(pageCount)=>{\r\n            dispatch(setPageCountAC_T(pageCount));\r\n        },\r\n\r\n\r\n        setQuery:(query)=>{\r\n            dispatch(setQueryAC_T(query));\r\n        },\r\n        setYears:(years)=>{\r\n            dispatch(setYearsAC_T(years));\r\n        },\r\n\r\n\r\n        \r\n        setCountries:(countries)=>{\r\n            dispatch(setCountriesAC_T(countries));\r\n        },\r\n        setСurrentCountries:(currentCountries)=>{\r\n            dispatch(setСurrentCountriesAC_T(currentCountries));\r\n        },\r\n\r\n\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Trending)","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\n\r\nexport default function SimpleTable(props){\r\n\r\nconst classes = useStyles();\r\n\r\nlet rows= props.shows;\r\nlet number = (props.page-1)*props.limit; \r\n\r\n\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>№</TableCell>\r\n            <TableCell>Title</TableCell>\r\n            <TableCell align=\"right\">Year</TableCell>\r\n            <TableCell align=\"right\">Trakt</TableCell>\r\n            <TableCell align=\"right\">Poster URL or TVDB id</TableCell>\r\n            </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map(row => ( // eslint-disable-next-line\r\n                number++,\r\n                row.ids.tvdb.length>8 ? \r\n                  (\r\n                    \r\n                    <TableRow key={row.ids.trakt}>\r\n                  <TableCell align=\"right\">{number}</TableCell>\r\n                  <TableCell component=\"th\" scope=\"row\">{row.title}</TableCell>\r\n                  <TableCell align=\"right\">{row.year}</TableCell>\r\n                  <TableCell align=\"right\">{row.ids.trakt}</TableCell>\r\n                  <TableCell align=\"right\">  <a href={row.ids.tvdb} target=\"_blank\"rel=\"noopener noreferrer\"> {\" \"}{row.ids.tvdb}</a> </TableCell>\r\n                  </TableRow>\r\n                  ) \r\n               :  \r\n                  (<TableRow key={row.ids.trakt}>\r\n                  <TableCell align=\"right\">{number}</TableCell>\r\n                  <TableCell component=\"th\" scope=\"row\">{row.title}</TableCell>\r\n                  <TableCell align=\"right\">{row.year}</TableCell>\r\n                  <TableCell align=\"right\">{row.ids.trakt}</TableCell>\r\n                  <TableCell align=\"right\">  {row.ids.tvdb}    </TableCell>\r\n                  </TableRow>\r\n                  )\r\n              ))}\r\n            </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n // \r\n\r\n\r\n","import React from 'react' \r\nimport {Component} from 'react'\r\nimport * as axios from 'axios'\r\nimport Table from '../presentational/TableP'\r\nimport Pagination from \"react-pagination-library\";\r\nimport \"react-pagination-library/build/css/index.css\"; \r\nimport Select from '../presentational/Select';\r\n\r\n\r\nclass Popular extends Component{ \r\n\r\n\r\ncomponentWillUnmount(){\r\n    this.props.setCurrentGenres('');\r\n    this.props.setCurrentLanguages('');\r\n    this.props.setСurrentCountries('');\r\n    this.props.setQuery('');\r\n    this.props.setYears('');\r\n    this.props.setCurrentPage(1);\r\n    this.props.setShows([]);      \r\n    this.props.setPageCount(0);   \r\n}\r\n  \r\nasync componentDidMount(){\r\n    const response = await axios({\r\n        url: `https://api.trakt.tv/shows/popular?page=${this.props.currentPage}&limit=${this.props.pageLimit}&genres=${this.props.currentGenres}&languages=${this.props.currentLanguages}&query=${this.props.query}&years=${this.props.years}&countries=${this.props.currentCountries}`,\r\n        method: 'get',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'trakt-api-version': 2,\r\n            'trakt-api-key': 'b817c26b5af6ff935a62c16c85628068da1be7bd67d3f05dbcc8b25c872df20b'\r\n        }\r\n     })\r\n     \r\n    let imgs = response.data ;\r\n    for(const row of imgs){\r\n        try {\r\n            const response = await axios({\r\n                  url: `http://webservice.fanart.tv/v3/tv/${row.ids.tvdb}?api_key=1296f15c399158e5046966fa404c88ff`,\r\n                  method: 'get',   \r\n            });\r\n             row.ids.tvdb = response.data.tvposter[0].url;\r\n            } catch (error) {}\r\n        };\r\n    this.props.setShows(imgs);\r\n    this.props.setPageCount(response.headers['x-pagination-page-count']);\r\n     \r\n\r\n        const genres = await axios ({\r\n        url: `https://api.trakt.tv/genres/shows`, // get all genres for shows from API\r\n        method: 'get',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'trakt-api-version': 2,\r\n            'trakt-api-key': 'b817c26b5af6ff935a62c16c85628068da1be7bd67d3f05dbcc8b25c872df20b'\r\n        }\r\n     })\r\n    this.props.setGenres(genres.data); \r\n\r\n        const languages = await axios ({\r\n        url: `https://api.trakt.tv/languages/shows`, // get all languages for shows from API\r\n        method: 'get',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'trakt-api-version': 2,\r\n            'trakt-api-key': 'b817c26b5af6ff935a62c16c85628068da1be7bd67d3f05dbcc8b25c872df20b'\r\n        }\r\n     })\r\n     \r\n    this.props.setLanguages(languages.data);\r\n     \r\n\r\n        const countries = await axios({\r\n        url: `https://api.trakt.tv/countries/shows`, // get all countries for shows from API\r\n        method: 'get',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'trakt-api-version': 2,\r\n            'trakt-api-key': 'b817c26b5af6ff935a62c16c85628068da1be7bd67d3f05dbcc8b25c872df20b'\r\n        }\r\n     })\r\n     \r\n    this.props.setCountries(countries.data);\r\n    \r\n     \r\n    }\r\n\r\nonPageChanged=(pageNumber)=>{\r\n        \r\n        this.props.setCurrentPage(pageNumber);\r\n        \r\n        async function pageChange(props){\r\n        const response = await axios({\r\n            url: `https://api.trakt.tv/shows/popular?page=${pageNumber}&limit=${props.pageLimit}&genres=${props.currentGenres}&languages=${props.currentLanguages}&query=${props.query}&years=${props.years}&countries=${props.currentCountries}`,\r\n            method: 'get',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'trakt-api-version': 2,\r\n                'trakt-api-key': 'b817c26b5af6ff935a62c16c85628068da1be7bd67d3f05dbcc8b25c872df20b'\r\n            }\r\n         })\r\n         \r\n        let imgs = response.data ;\r\n        for(const row of imgs){\r\n            try {\r\n                const response = await axios({\r\n                      url: `http://webservice.fanart.tv/v3/tv/${row.ids.tvdb}?api_key=1296f15c399158e5046966fa404c88ff`,\r\n                      method: 'get',   \r\n                });\r\n                 row.ids.tvdb = response.data.tvposter[0].url;\r\n                } catch (error) {}\r\n            };\r\n        props.setShows(imgs);\r\n        }\r\n\r\n        try {\r\n            pageChange(this.props);\r\n        } catch (error) {  \r\n        }\r\n        \r\n\r\n    }\r\n\r\n\r\n\r\nonLangComboboxChange=(value)=>{\r\n        let res =[];\r\n        let languages = this.props.languages;\r\n        let myres=[]; \r\n        value.forEach(function(element) {\r\n            myres.push(languages.find(lang=>lang.name===element));\r\n        });\r\n        myres.forEach(function(element) {\r\n            res.push(element.code);\r\n        });\r\n\r\n        \r\n\r\n        async function pageChange(props){\r\n            const response = await axios({\r\n                url: `https://api.trakt.tv/shows/popular?page=${1}&limit=${props.pageLimit}&genres=${props.currentGenres}&languages=${res.join()}&query=${props.query}&years=${props.years}&countries=${props.currentCountries}`,\r\n                method: 'get',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'trakt-api-version': 2,\r\n                    'trakt-api-key': 'b817c26b5af6ff935a62c16c85628068da1be7bd67d3f05dbcc8b25c872df20b'\r\n                }\r\n             })\r\n             \r\n            let imgs = response.data ;\r\n            for(const row of imgs){\r\n                try {\r\n                    const response = await axios({\r\n                          url: `http://webservice.fanart.tv/v3/tv/${row.ids.tvdb}?api_key=1296f15c399158e5046966fa404c88ff`,\r\n                          method: 'get',   \r\n                    });\r\n                     row.ids.tvdb = response.data.tvposter[0].url;\r\n                    } catch (error) {}\r\n                };\r\n            props.setShows(imgs);\r\n            props.setPageCount(response.headers['x-pagination-page-count']);\r\n            }\r\n            try {\r\n                pageChange(this.props);\r\n            } catch (error) {  \r\n            }\r\n            \r\n\r\n\r\n\r\n            this.props.setCurrentPage(1);\r\n\r\n            this.props.setCurrentLanguages(res.join());\r\n            \r\n    \r\n\r\n      \r\n        \r\n\r\n\r\n    }\r\n\r\nonGenreComboboxChange=(value)=>{\r\n        let res =[];\r\n        let genres = this.props.genres;\r\n        let myres=[]; \r\n        value.forEach(function(element) {\r\n            myres.push(genres.find(lang=>lang.name===element));\r\n        });\r\n        myres.forEach(function(element) {\r\n            res.push(element.slug);\r\n        });\r\n\r\n        \r\n\r\n        async function pageChange(props){\r\n            const response = await axios({\r\n                url: `https://api.trakt.tv/shows/popular?page=${1}&limit=${props.pageLimit}&genres=${res.join()}&languages=${props.currentLanguages}&query=${props.query}&years=${props.years}&countries=${props.currentCountries}`,\r\n                method: 'get',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'trakt-api-version': 2,\r\n                    'trakt-api-key': 'b817c26b5af6ff935a62c16c85628068da1be7bd67d3f05dbcc8b25c872df20b'\r\n                }\r\n             })\r\n             \r\n            let imgs = response.data ;\r\n            for(const row of imgs){\r\n                try {\r\n                    const response = await axios({\r\n                          url: `http://webservice.fanart.tv/v3/tv/${row.ids.tvdb}?api_key=1296f15c399158e5046966fa404c88ff`,\r\n                          method: 'get',   \r\n                    });\r\n                     row.ids.tvdb = response.data.tvposter[0].url;\r\n                    } catch (error) {}\r\n                };\r\n            props.setShows(imgs);\r\n            props.setPageCount(response.headers['x-pagination-page-count']);\r\n            }\r\n            try {\r\n                pageChange(this.props);\r\n            } catch (error) {  \r\n            }\r\n            \r\n\r\n            this.props.setCurrentPage(1);\r\n\r\n            this.props.setCurrentGenres(res.join());\r\n         \r\n    \r\n\r\n\r\n        \r\n        \r\n         \r\n    }\r\n \r\nonCountriesComboboxChange=(value)=>{\r\n        let res =[];\r\n        let countries = this.props.countries;\r\n        let myres=[]; \r\n        value.forEach(function(element) {\r\n            myres.push(countries.find(coun=>coun.name===element));\r\n        });\r\n        myres.forEach(function(element) {\r\n            res.push(element.code);\r\n        });\r\n\r\n\r\n\r\n\r\n        async function pageChange(props){\r\n            const response = await axios({\r\n                url: `https://api.trakt.tv/shows/popular?page=${1}&limit=${props.pageLimit}&genres=${props.currentGenres}&languages=${props.currentLanguages}&query=${props.query}&years=${props.years}&countries=${res.join()}`,\r\n                method: 'get',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'trakt-api-version': 2,\r\n                    'trakt-api-key': 'b817c26b5af6ff935a62c16c85628068da1be7bd67d3f05dbcc8b25c872df20b'\r\n                }\r\n             })\r\n             \r\n            let imgs = response.data ;\r\n            for(const row of imgs){\r\n                try {\r\n                    const response = await axios({\r\n                          url: `http://webservice.fanart.tv/v3/tv/${row.show.ids.tvdb}?api_key=1296f15c399158e5046966fa404c88ff`,\r\n                          method: 'get',   \r\n                    });\r\n                     row.ids.tvdb = response.data.tvposter[0].url;\r\n                    } catch (error) {}\r\n                };\r\n            props.setShows(imgs);\r\n            props.setPageCount(response.headers['x-pagination-page-count']);\r\n            }\r\n            try {\r\n                pageChange(this.props);\r\n            } catch (error) {  \r\n            }\r\n            \r\n\r\n\r\n        this.props.setCurrentPage(1);\r\n\r\n        this.props.setСurrentCountries(res.join());\r\n        \r\n        \r\n          \r\n\r\n\r\n    }\r\n    \r\n\r\nhandleChangeQuery=(e)=>{\r\n        this.props.setQuery(e.target.value);\r\n\r\n        async function pageChange(props){\r\n            const response = await axios({\r\n                url: `https://api.trakt.tv/shows/popular?page=${1}&limit=${props.pageLimit}&genres=${props.currentGenres}&languages=${props.currentLanguages}&query=${e.target.value}&years=${props.years}&countries=${props.currentCountries}`,\r\n                method: 'get',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'trakt-api-version': 2,\r\n                    'trakt-api-key': 'b817c26b5af6ff935a62c16c85628068da1be7bd67d3f05dbcc8b25c872df20b'\r\n                }\r\n             })\r\n             \r\n            let imgs = response.data ;\r\n            for(const row of imgs){\r\n                try {\r\n                    const response = await axios({\r\n                          url: `http://webservice.fanart.tv/v3/tv/${row.show.ids.tvdb}?api_key=1296f15c399158e5046966fa404c88ff`,\r\n                          method: 'get',   \r\n                    });\r\n                     row.ids.tvdb = response.data.tvposter[0].url;\r\n                    } catch (error) {}\r\n                };\r\n            props.setShows(imgs);\r\n            props.setPageCount(response.headers['x-pagination-page-count']);\r\n            }\r\n            try {\r\n                pageChange(this.props);\r\n            } catch (error) {  \r\n            }\r\n            \r\n        this.props.setCurrentPage(1);\r\n\r\n\r\n\r\n    }\r\n\r\nhandleChangeYears=(e)=>{\r\n        this.props.setYears(e.target.value);\r\n\r\n        async function pageChange(props){\r\n            const response = await axios({\r\n                url: `https://api.trakt.tv/shows/popular?page=${1}&limit=${props.pageLimit}&genres=${props.currentGenres}&languages=${props.currentLanguages}&query=${props.query}&years=${e.target.value}&countries=${props.currentCountries}`,\r\n                method: 'get',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'trakt-api-version': 2,\r\n                    'trakt-api-key': 'b817c26b5af6ff935a62c16c85628068da1be7bd67d3f05dbcc8b25c872df20b'\r\n                }\r\n             })\r\n             \r\n            let imgs = response.data ;\r\n            for(const row of imgs){\r\n                try {\r\n                    const response = await axios({\r\n                          url: `http://webservice.fanart.tv/v3/tv/${row.ids.tvdb}?api_key=1296f15c399158e5046966fa404c88ff`,\r\n                          method: 'get',   \r\n                    });\r\n                     row.ids.tvdb = response.data.tvposter[0].url;\r\n                    } catch (error) {}\r\n                };\r\n            props.setShows(imgs);\r\n            props.setPageCount(response.headers['x-pagination-page-count']);\r\n            }\r\n            try {\r\n                pageChange(this.props);\r\n            } catch (error) {  \r\n            }\r\n\r\n\r\n        this.props.setCurrentPage(1);\r\n\r\n\r\n    }\r\n\r\nrender(){\r\n    const{ genres,languages,shows,countries} = this.props;\r\n    return( \r\n        <div className=\"container\"> \r\n            <h4 className =\"center\"> Popular</h4>\r\n            <label > Search titles and descriptions\r\n                 <input type=\"text\" onChange={this.handleChangeQuery}/>\r\n            </label>\r\n            <label > Search 4 digit year or range of years\r\n                 <input type=\"text\" onChange={this.handleChangeYears}/>\r\n            </label>\r\n            <Select items={languages} title=\"Language\" onChange={this.onLangComboboxChange}  />\r\n            <Select items={genres}  title=\"Genres\" onChange={this.onGenreComboboxChange} />\r\n            <Select items={countries}  title=\"Countries\" onChange={this.onCountriesComboboxChange} />\r\n            <Table shows={shows} page ={this.props.currentPage} limit ={this.props.pageLimit}/>\r\n            <Pagination\r\n                currentPage={this.props.currentPage}\r\n                totalPages={this.props.pageCount}\r\n                changeCurrentPage={this.onPageChanged}\r\n                theme=\"bottom-border\"\r\n                />\r\n            \r\n           \r\n        </div> \r\n    ) \r\n    }\r\n}\r\n\r\nexport default Popular;","\r\nconst SET_SHOWS_P= 'SET_SHOWS_P'\r\nconst SET_GENRES_P= 'SET_GENRES_P'\r\nconst SET_LANGUAGES_P= 'SET_LANGUAGES_P'\r\nconst SET_CURRENT_PAGE_P='SET_CURRENT_PAGE_P'\r\nconst SET_CURRENT_GENRES_P='SET_CURRENT_GENRES_P'\r\nconst SET_CURRENT_LANGUAGES_P='SET_CURRENT_LANGUAGES_P'\r\nconst SET_PAGE_COUNT_P='SET_PAGE_COUNT_P'\r\nconst SET_QUERY_P='SET_QUERY_P'\r\nconst SET_YEARS_P='SET_YEARS_P'\r\nconst SET_COUNTRIES_P='SET_COUNTRIES_P'\r\nconst SET_CURRENT_COUNTRIES_P='SET_CURRENT_COUNTRIES_P'\r\n\r\n\r\n\r\n\r\n\r\nconst initState ={\r\n   \r\n    \r\n        shows: [],\r\n        genres: [],\r\n        languages: [],\r\n        pageLimit: 10,\r\n        pageCount: 0,\r\n        currentPage: 1,\r\n        currentGenres: '',\r\n        currentLanguages: '',\r\n        currentCountries: '',\r\n        countries:[],\r\n        query: '',\r\n        years: '',\r\n    \r\n}\r\n\r\nconst popularReducer = (state = initState, action)=>{\r\n\r\n\r\n    switch( action.type){\r\n        case SET_SHOWS_P:{\r\n            return {...state,\r\n               shows: action.shows}\r\n        }\r\n        case SET_GENRES_P:{\r\n            return {...state,\r\n                 genres: action.genres}\r\n        }\r\n        case SET_LANGUAGES_P:{\r\n            return {...state,\r\n                languages: action.languages}\r\n        }\r\n        case SET_CURRENT_PAGE_P:{\r\n            return {...state, \r\n                currentPage: action.currentPage }\r\n        }\r\n        case SET_CURRENT_GENRES_P:{\r\n            return {...state,\r\n                currentGenres: action.currentGenres }\r\n        }\r\n        case SET_CURRENT_LANGUAGES_P:{\r\n            return {...state,\r\n                 currentLanguages: action.currentLanguages }\r\n        }\r\n        case SET_PAGE_COUNT_P:{\r\n            return {...state,\r\n                 pageCount: action.pageCount }\r\n        }\r\n        case SET_QUERY_P:{\r\n            return {...state,\r\n                query: action.query }\r\n        }\r\n        case SET_YEARS_P:{\r\n            return {...state,\r\n                years: action.years }\r\n        }\r\n        case SET_COUNTRIES_P:{\r\n            return {...state,\r\n                countries: action.countries }\r\n        }\r\n        case SET_CURRENT_COUNTRIES_P:{\r\n            return {...state,\r\n                 currentCountries: action.currentCountries }\r\n        }\r\n\r\n\r\n        default:\r\n           return state;\r\n       }\r\n    \r\n}\r\n\r\n\r\nexport const setShowsAC_P = (shows) => ({type: SET_SHOWS_P, shows})\r\nexport const setGenresAC_P = (genres) => ({type: SET_GENRES_P, genres})\r\nexport const setLanguagesAC_P = (languages) => ({type: SET_LANGUAGES_P, languages})\r\nexport const setCurrentPageAC_P = (currentPage) => ({type: SET_CURRENT_PAGE_P, currentPage})\r\nexport const setCurrentLanguagesAC_P = (currentLanguages) => ({type: SET_CURRENT_LANGUAGES_P, currentLanguages})\r\nexport const setCurrentGenresAC_P = (currentGenres) => ({type: SET_CURRENT_GENRES_P, currentGenres})\r\nexport const setPageCountAC_P = (pageCount) => ({type: SET_PAGE_COUNT_P, pageCount})\r\nexport const setQueryAC_P = (query) => ({type: SET_QUERY_P, query})\r\nexport const setYearsAC_P = (years) => ({type: SET_YEARS_P, years})\r\nexport const setCountriesAC_P = (countries) => ({type: SET_COUNTRIES_P, countries})\r\nexport const setСurrentCountriesAC_P = (currentCountries) => ({type: SET_CURRENT_COUNTRIES_P, currentCountries})\r\n\r\nexport default popularReducer","\r\nimport {connect} from \"react-redux\"\r\n\r\nimport Popular from './Popular'\r\nimport {setShowsAC_P, setGenresAC_P, setLanguagesAC_P, setCurrentPageAC_P, setCurrentLanguagesAC_P, setCurrentGenresAC_P, setPageCountAC_P, setQueryAC_P, setYearsAC_P, setCountriesAC_P, setСurrentCountriesAC_P} from '../../reducers/popular';\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    let  {popular} = state;\r\n    return{\r\n        shows: popular.shows,\r\n        genres: popular.genres,\r\n        languages: popular.languages,\r\n        pageCount: popular.pageCount,\r\n        pageLimit: popular.pageLimit,\r\n        currentPage: popular.currentPage,\r\n        currentGenres: popular.currentGenres,\r\n        currentLanguages: popular.currentLanguages,\r\n\r\n        countries:popular.countries,\r\n        currentCountries: popular.currentCountries,\r\n        query: popular.query,\r\n        years: popular.years,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        setShows: (shows)=>{\r\n           dispatch(setShowsAC_P(shows));\r\n        },\r\n        setGenres: (genres)=>{\r\n           dispatch(setGenresAC_P(genres));\r\n        },\r\n        setLanguages: (languages)=>{\r\n           dispatch(setLanguagesAC_P(languages));\r\n        },\r\n        setCurrentPage:(page)=>{\r\n            dispatch(setCurrentPageAC_P(page));\r\n        },\r\n        setCurrentLanguages:(languages)=>{\r\n            dispatch(setCurrentLanguagesAC_P(languages));\r\n        },\r\n        setCurrentGenres:(genres)=>{\r\n            dispatch(setCurrentGenresAC_P(genres));\r\n        },\r\n        setPageCount:(pageCount)=>{\r\n            dispatch(setPageCountAC_P(pageCount));\r\n        },\r\n\r\n\r\n        setQuery:(query)=>{\r\n            dispatch(setQueryAC_P(query));\r\n        },\r\n        setYears:(years)=>{\r\n            dispatch(setYearsAC_P(years));\r\n        },\r\n\r\n\r\n        \r\n        setCountries:(countries)=>{\r\n            dispatch(setCountriesAC_P(countries));\r\n        },\r\n        setСurrentCountries:(currentCountries)=>{\r\n            dispatch(setСurrentCountriesAC_P(currentCountries));\r\n        },\r\n\r\n\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Popular)","import React from 'react'\r\nimport Navbar from './components/presentational/Navbar'\r\nimport { BrowserRouter, Route} from 'react-router-dom'\r\n\r\n\r\nimport TrendingShowsContainer from './components/containers/TrendingShowsContainer';\r\nimport PopularShowsContainer from './components/containers/PopularShowsContainer';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n    <div className=\"App\">\r\n     <Navbar/>\r\n   \r\n     <Route exact path='/trending' component={TrendingShowsContainer} />\r\n     <Route exact path='/' component={TrendingShowsContainer} />\r\n     <Route exact path='/popular' component={PopularShowsContainer} />\r\n     \r\n   \r\n  \r\n     \r\n    </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport popularReducer from \"./reducers/popular\";\r\nimport trendingReducer from \"./reducers/trending\";\r\nimport {combineReducers } from 'redux';\r\n\r\nconst store = createStore(combineReducers({popular: popularReducer, trending: trendingReducer}), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}